// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: user_manager/user_manager.proto
#ifndef GRPC_user_5fmanager_2fuser_5fmanager_2eproto__INCLUDED
#define GRPC_user_5fmanager_2fuser_5fmanager_2eproto__INCLUDED

#include "user_manager/user_manager.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace smart3dmap {
namespace v1 {

class UserManager final {
 public:
  static constexpr char const* service_full_name() {
    return "smart3dmap.v1.UserManager";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 生成一张票据。
    virtual ::grpc::Status NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::smart3dmap::v1::Ticket* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Ticket>> AsyncNewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Ticket>>(AsyncNewTicketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Ticket>> PrepareAsyncNewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Ticket>>(PrepareAsyncNewTicketRaw(context, request, cq));
    }
    // 验证一张票据：（1）检查票据是否在有效期内，（2）票据是否真的由本服务器签发。
    virtual ::grpc::Status VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncVerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncVerifyTicketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncVerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncVerifyTicketRaw(context, request, cq));
    }
    // 邀请用户注册。新邀请的用户处于未激活状态。激活后的用户账号才可使用。
    virtual ::grpc::Status InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::smart3dmap::v1::UserInvitation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>> AsyncInviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>>(AsyncInviteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>> PrepareAsyncInviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>>(PrepareAsyncInviteUserRaw(context, request, cq));
    }
    // 根据Token查询邀请用户的记录。
    virtual ::grpc::Status GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::smart3dmap::v1::UserInvitation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>> AsyncGetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>>(AsyncGetUserInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>> PrepareAsyncGetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>>(PrepareAsyncGetUserInvitationRaw(context, request, cq));
    }
    // 用户注册
    virtual ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncRegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    // 自主用户账号激活
    virtual ::grpc::Status ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::smart3dmap::v1::User* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>> AsyncActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>>(AsyncActiveUserByManagerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>> PrepareAsyncActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>>(PrepareAsyncActiveUserByManagerRaw(context, request, cq));
    }
    // 激活用户账号。
    virtual ::grpc::Status ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::smart3dmap::v1::User* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>> AsyncActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>>(AsyncActivateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>> PrepareAsyncActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>>(PrepareAsyncActivateUserRaw(context, request, cq));
    }
    // 依据ID或者Email查询用户。
    virtual ::grpc::Status GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::smart3dmap::v1::User* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>> AsyncGetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>>(AsyncGetUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>> PrepareAsyncGetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>>(PrepareAsyncGetUserRaw(context, request, cq));
    }
    // 分页查询用户
    virtual ::grpc::Status ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::smart3dmap::v1::ListUsersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListUsersResponse>> AsyncListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListUsersResponse>>(AsyncListUsersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListUsersResponse>> PrepareAsyncListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListUsersResponse>>(PrepareAsyncListUsersRaw(context, request, cq));
    }
    // 修改用户信息，账号状态等
    virtual ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncUpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    // 重置用户密码
    virtual ::grpc::Status ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncResetUserPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncResetUserPasswordRaw(context, request, cq));
    }
    // 根据ID删除用户
    virtual ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncDeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    // 检查用户是否为管理员。
    virtual ::grpc::Status IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncIsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncIsAdminUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncIsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncIsAdminUserRaw(context, request, cq));
    }
    // 添加部门
    virtual ::grpc::Status AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncAddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncAddTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncAddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncAddTeamRaw(context, request, cq));
    }
    // 修改部门
    virtual ::grpc::Status UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncUpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncUpdateTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncUpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateTeamRaw(context, request, cq));
    }
    // 根据id删除
    virtual ::grpc::Status DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncDeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncDeleteTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncDeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncDeleteTeamRaw(context, request, cq));
    }
    // 查询所有
    virtual ::grpc::Status ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::smart3dmap::v1::ListTeamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListTeamsResponse>> AsyncListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListTeamsResponse>>(AsyncListTeamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListTeamsResponse>> PrepareAsyncListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListTeamsResponse>>(PrepareAsyncListTeamsRaw(context, request, cq));
    }
    // 查询单个
    virtual ::grpc::Status GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::smart3dmap::v1::Team* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Team>> AsyncGetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Team>>(AsyncGetTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Team>> PrepareAsyncGetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Team>>(PrepareAsyncGetTeamRaw(context, request, cq));
    }
    // 查询小组内成员
    std::unique_ptr< ::grpc::ClientReaderInterface< ::smart3dmap::v1::User>> GetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::smart3dmap::v1::User>>(GetTeamUserRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::smart3dmap::v1::User>> AsyncGetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::smart3dmap::v1::User>>(AsyncGetTeamUserRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::smart3dmap::v1::User>> PrepareAsyncGetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::smart3dmap::v1::User>>(PrepareAsyncGetTeamUserRaw(context, request, cq));
    }
    // 添加小组成员
    virtual ::grpc::Status AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncAddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncAddTeamUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncAddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncAddTeamUserRaw(context, request, cq));
    }
    // 删除小组内成员
    virtual ::grpc::Status DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncDeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncDeleteTeamUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncDeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncDeleteTeamUserRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // 生成一张票据。
      virtual void NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 验证一张票据：（1）检查票据是否在有效期内，（2）票据是否真的由本服务器签发。
      virtual void VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 邀请用户注册。新邀请的用户处于未激活状态。激活后的用户账号才可使用。
      virtual void InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 根据Token查询邀请用户的记录。
      virtual void GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 用户注册
      virtual void RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 自主用户账号激活
      virtual void ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 激活用户账号。
      virtual void ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 依据ID或者Email查询用户。
      virtual void GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 分页查询用户
      virtual void ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 修改用户信息，账号状态等
      virtual void UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 重置用户密码
      virtual void ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 根据ID删除用户
      virtual void DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 检查用户是否为管理员。
      virtual void IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 添加部门
      virtual void AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 修改部门
      virtual void UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 根据id删除
      virtual void DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 查询所有
      virtual void ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 查询单个
      virtual void GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 查询小组内成员
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest* request, ::grpc::ClientReadReactor< ::smart3dmap::v1::User>* reactor) = 0;
      #else
      virtual void GetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest* request, ::grpc::experimental::ClientReadReactor< ::smart3dmap::v1::User>* reactor) = 0;
      #endif
      // 添加小组成员
      virtual void AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 删除小组内成员
      virtual void DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Ticket>* AsyncNewTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Ticket>* PrepareAsyncNewTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncVerifyTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncVerifyTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>* AsyncInviteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>* PrepareAsyncInviteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>* AsyncGetUserInvitationRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UserInvitation>* PrepareAsyncGetUserInvitationRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>* AsyncActiveUserByManagerRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>* PrepareAsyncActiveUserByManagerRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>* AsyncActivateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>* PrepareAsyncActivateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>* AsyncGetUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::User>* PrepareAsyncGetUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListUsersResponse>* AsyncListUsersRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListUsersResponse>* PrepareAsyncListUsersRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncResetUserPasswordRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncResetUserPasswordRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncIsAdminUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncIsAdminUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncAddTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncAddTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncUpdateTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncUpdateTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncDeleteTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncDeleteTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListTeamsResponse>* AsyncListTeamsRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::ListTeamsResponse>* PrepareAsyncListTeamsRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Team>* AsyncGetTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::Team>* PrepareAsyncGetTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::smart3dmap::v1::User>* GetTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::smart3dmap::v1::User>* AsyncGetTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::smart3dmap::v1::User>* PrepareAsyncGetTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncAddTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncAddTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncDeleteTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncDeleteTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::smart3dmap::v1::Ticket* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Ticket>> AsyncNewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Ticket>>(AsyncNewTicketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Ticket>> PrepareAsyncNewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Ticket>>(PrepareAsyncNewTicketRaw(context, request, cq));
    }
    ::grpc::Status VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncVerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncVerifyTicketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncVerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncVerifyTicketRaw(context, request, cq));
    }
    ::grpc::Status InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::smart3dmap::v1::UserInvitation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>> AsyncInviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>>(AsyncInviteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>> PrepareAsyncInviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>>(PrepareAsyncInviteUserRaw(context, request, cq));
    }
    ::grpc::Status GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::smart3dmap::v1::UserInvitation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>> AsyncGetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>>(AsyncGetUserInvitationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>> PrepareAsyncGetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>>(PrepareAsyncGetUserInvitationRaw(context, request, cq));
    }
    ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncRegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    ::grpc::Status ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::smart3dmap::v1::User* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>> AsyncActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>>(AsyncActiveUserByManagerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>> PrepareAsyncActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>>(PrepareAsyncActiveUserByManagerRaw(context, request, cq));
    }
    ::grpc::Status ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::smart3dmap::v1::User* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>> AsyncActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>>(AsyncActivateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>> PrepareAsyncActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>>(PrepareAsyncActivateUserRaw(context, request, cq));
    }
    ::grpc::Status GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::smart3dmap::v1::User* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>> AsyncGetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>>(AsyncGetUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>> PrepareAsyncGetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>>(PrepareAsyncGetUserRaw(context, request, cq));
    }
    ::grpc::Status ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::smart3dmap::v1::ListUsersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListUsersResponse>> AsyncListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListUsersResponse>>(AsyncListUsersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListUsersResponse>> PrepareAsyncListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListUsersResponse>>(PrepareAsyncListUsersRaw(context, request, cq));
    }
    ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncUpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    ::grpc::Status ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncResetUserPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncResetUserPasswordRaw(context, request, cq));
    }
    ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncDeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    ::grpc::Status IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncIsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncIsAdminUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncIsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncIsAdminUserRaw(context, request, cq));
    }
    ::grpc::Status AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncAddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncAddTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncAddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncAddTeamRaw(context, request, cq));
    }
    ::grpc::Status UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncUpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncUpdateTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncUpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncUpdateTeamRaw(context, request, cq));
    }
    ::grpc::Status DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncDeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncDeleteTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncDeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncDeleteTeamRaw(context, request, cq));
    }
    ::grpc::Status ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::smart3dmap::v1::ListTeamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListTeamsResponse>> AsyncListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListTeamsResponse>>(AsyncListTeamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListTeamsResponse>> PrepareAsyncListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListTeamsResponse>>(PrepareAsyncListTeamsRaw(context, request, cq));
    }
    ::grpc::Status GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::smart3dmap::v1::Team* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Team>> AsyncGetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Team>>(AsyncGetTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Team>> PrepareAsyncGetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Team>>(PrepareAsyncGetTeamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::smart3dmap::v1::User>> GetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::smart3dmap::v1::User>>(GetTeamUserRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::smart3dmap::v1::User>> AsyncGetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::smart3dmap::v1::User>>(AsyncGetTeamUserRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::smart3dmap::v1::User>> PrepareAsyncGetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::smart3dmap::v1::User>>(PrepareAsyncGetTeamUserRaw(context, request, cq));
    }
    ::grpc::Status AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncAddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncAddTeamUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncAddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncAddTeamUserRaw(context, request, cq));
    }
    ::grpc::Status DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncDeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncDeleteTeamUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncDeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncDeleteTeamUserRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void NewTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void VerifyTicket(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void InviteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetUserInvitation(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RegisterUser(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ActiveUserByManager(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ActivateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListUsers(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateUser(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ResetUserPassword(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteUser(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void IsAdminUser(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AddTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListTeams(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetTeam(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest* request, ::grpc::ClientReadReactor< ::smart3dmap::v1::User>* reactor) override;
      #else
      void GetTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest* request, ::grpc::experimental::ClientReadReactor< ::smart3dmap::v1::User>* reactor) override;
      #endif
      void AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AddTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteTeamUser(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Ticket>* AsyncNewTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Ticket>* PrepareAsyncNewTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::NewTicketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncVerifyTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncVerifyTicketRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Ticket& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>* AsyncInviteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>* PrepareAsyncInviteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::InviteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>* AsyncGetUserInvitationRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UserInvitation>* PrepareAsyncGetUserInvitationRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserInvitationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>* AsyncActiveUserByManagerRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>* PrepareAsyncActiveUserByManagerRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>* AsyncActivateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>* PrepareAsyncActivateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ActiveUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>* AsyncGetUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::User>* PrepareAsyncGetUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListUsersResponse>* AsyncListUsersRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListUsersResponse>* PrepareAsyncListUsersRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListUsersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncResetUserPasswordRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncResetUserPasswordRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncIsAdminUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncIsAdminUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::IsAdminUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncAddTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncAddTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncUpdateTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncUpdateTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::Team& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncDeleteTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncDeleteTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteTeamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListTeamsResponse>* AsyncListTeamsRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::ListTeamsResponse>* PrepareAsyncListTeamsRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::ListTeamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Team>* AsyncGetTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::Team>* PrepareAsyncGetTeamRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::smart3dmap::v1::User>* GetTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request) override;
    ::grpc::ClientAsyncReader< ::smart3dmap::v1::User>* AsyncGetTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::smart3dmap::v1::User>* PrepareAsyncGetTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetTeamUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncAddTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncAddTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncDeleteTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncDeleteTeamUserRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::TeamUser& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_NewTicket_;
    const ::grpc::internal::RpcMethod rpcmethod_VerifyTicket_;
    const ::grpc::internal::RpcMethod rpcmethod_InviteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserInvitation_;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ActiveUserByManager_;
    const ::grpc::internal::RpcMethod rpcmethod_ActivateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUsers_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetUserPassword_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_IsAdminUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AddTeam_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateTeam_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTeam_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTeams_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTeam_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTeamUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AddTeamUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTeamUser_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 生成一张票据。
    virtual ::grpc::Status NewTicket(::grpc::ServerContext* context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response);
    // 验证一张票据：（1）检查票据是否在有效期内，（2）票据是否真的由本服务器签发。
    virtual ::grpc::Status VerifyTicket(::grpc::ServerContext* context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response);
    // 邀请用户注册。新邀请的用户处于未激活状态。激活后的用户账号才可使用。
    virtual ::grpc::Status InviteUser(::grpc::ServerContext* context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response);
    // 根据Token查询邀请用户的记录。
    virtual ::grpc::Status GetUserInvitation(::grpc::ServerContext* context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response);
    // 用户注册
    virtual ::grpc::Status RegisterUser(::grpc::ServerContext* context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response);
    // 自主用户账号激活
    virtual ::grpc::Status ActiveUserByManager(::grpc::ServerContext* context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response);
    // 激活用户账号。
    virtual ::grpc::Status ActivateUser(::grpc::ServerContext* context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response);
    // 依据ID或者Email查询用户。
    virtual ::grpc::Status GetUser(::grpc::ServerContext* context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response);
    // 分页查询用户
    virtual ::grpc::Status ListUsers(::grpc::ServerContext* context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response);
    // 修改用户信息，账号状态等
    virtual ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response);
    // 重置用户密码
    virtual ::grpc::Status ResetUserPassword(::grpc::ServerContext* context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response);
    // 根据ID删除用户
    virtual ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response);
    // 检查用户是否为管理员。
    virtual ::grpc::Status IsAdminUser(::grpc::ServerContext* context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response);
    // 添加部门
    virtual ::grpc::Status AddTeam(::grpc::ServerContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response);
    // 修改部门
    virtual ::grpc::Status UpdateTeam(::grpc::ServerContext* context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response);
    // 根据id删除
    virtual ::grpc::Status DeleteTeam(::grpc::ServerContext* context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response);
    // 查询所有
    virtual ::grpc::Status ListTeams(::grpc::ServerContext* context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response);
    // 查询单个
    virtual ::grpc::Status GetTeam(::grpc::ServerContext* context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response);
    // 查询小组内成员
    virtual ::grpc::Status GetTeamUser(::grpc::ServerContext* context, const ::smart3dmap::v1::GetTeamUserRequest* request, ::grpc::ServerWriter< ::smart3dmap::v1::User>* writer);
    // 添加小组成员
    virtual ::grpc::Status AddTeamUser(::grpc::ServerContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response);
    // 删除小组内成员
    virtual ::grpc::Status DeleteTeamUser(::grpc::ServerContext* context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_NewTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_NewTicket() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_NewTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewTicket(::grpc::ServerContext* context, ::smart3dmap::v1::NewTicketRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::Ticket>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VerifyTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VerifyTicket() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_VerifyTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyTicket(::grpc::ServerContext* context, ::smart3dmap::v1::Ticket* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InviteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InviteUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_InviteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InviteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInviteUser(::grpc::ServerContext* context, ::smart3dmap::v1::InviteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::UserInvitation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserInvitation() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetUserInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserInvitation(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserInvitation(::grpc::ServerContext* context, ::smart3dmap::v1::GetUserInvitationRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::UserInvitation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterUser() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::smart3dmap::v1::RegisterUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ActiveUserByManager : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ActiveUserByManager() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ActiveUserByManager() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActiveUserByManager(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActiveUserByManager(::grpc::ServerContext* context, ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::User>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ActivateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ActivateUser() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ActivateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivateUser(::grpc::ServerContext* context, ::smart3dmap::v1::ActiveUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::User>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUser() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUser(::grpc::ServerContext* context, ::smart3dmap::v1::GetUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::User>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListUsers() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ListUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUsers(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUsers(::grpc::ServerContext* context, ::smart3dmap::v1::ListUsersRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::ListUsersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUser() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::smart3dmap::v1::UpdateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetUserPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResetUserPassword() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ResetUserPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetUserPassword(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetUserPassword(::grpc::ServerContext* context, ::smart3dmap::v1::ResetUserPasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteUser() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::smart3dmap::v1::DeleteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsAdminUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IsAdminUser() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_IsAdminUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsAdminUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsAdminUser(::grpc::ServerContext* context, ::smart3dmap::v1::IsAdminUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddTeam() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_AddTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddTeam(::grpc::ServerContext* context, ::smart3dmap::v1::Team* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateTeam() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_UpdateTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTeam(::grpc::ServerContext* context, ::smart3dmap::v1::Team* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTeam() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeleteTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTeam(::grpc::ServerContext* context, ::smart3dmap::v1::DeleteTeamRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTeams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTeams() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ListTeams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTeams(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTeams(::grpc::ServerContext* context, ::smart3dmap::v1::ListTeamsRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::ListTeamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTeam() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeam(::grpc::ServerContext* context, ::smart3dmap::v1::GetTeamRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::Team>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTeamUser() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/, ::grpc::ServerWriter< ::smart3dmap::v1::User>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeamUser(::grpc::ServerContext* context, ::smart3dmap::v1::GetTeamUserRequest* request, ::grpc::ServerAsyncWriter< ::smart3dmap::v1::User>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(18, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddTeamUser() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_AddTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddTeamUser(::grpc::ServerContext* context, ::smart3dmap::v1::TeamUser* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTeamUser() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_DeleteTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTeamUser(::grpc::ServerContext* context, ::smart3dmap::v1::TeamUser* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_NewTicket<WithAsyncMethod_VerifyTicket<WithAsyncMethod_InviteUser<WithAsyncMethod_GetUserInvitation<WithAsyncMethod_RegisterUser<WithAsyncMethod_ActiveUserByManager<WithAsyncMethod_ActivateUser<WithAsyncMethod_GetUser<WithAsyncMethod_ListUsers<WithAsyncMethod_UpdateUser<WithAsyncMethod_ResetUserPassword<WithAsyncMethod_DeleteUser<WithAsyncMethod_IsAdminUser<WithAsyncMethod_AddTeam<WithAsyncMethod_UpdateTeam<WithAsyncMethod_DeleteTeam<WithAsyncMethod_ListTeams<WithAsyncMethod_GetTeam<WithAsyncMethod_GetTeamUser<WithAsyncMethod_AddTeamUser<WithAsyncMethod_DeleteTeamUser<Service > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_NewTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_NewTicket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::NewTicketRequest, ::smart3dmap::v1::Ticket>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::NewTicketRequest* request, ::smart3dmap::v1::Ticket* response) { return this->NewTicket(context, request, response); }));}
    void SetMessageAllocatorFor_NewTicket(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::NewTicketRequest, ::smart3dmap::v1::Ticket>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::NewTicketRequest, ::smart3dmap::v1::Ticket>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_NewTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* NewTicket(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* NewTicket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_VerifyTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_VerifyTicket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::Ticket, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::Ticket* request, ::google::protobuf::BoolValue* response) { return this->VerifyTicket(context, request, response); }));}
    void SetMessageAllocatorFor_VerifyTicket(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::Ticket, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::Ticket, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_VerifyTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* VerifyTicket(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* VerifyTicket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_InviteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_InviteUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::InviteUserRequest, ::smart3dmap::v1::UserInvitation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::InviteUserRequest* request, ::smart3dmap::v1::UserInvitation* response) { return this->InviteUser(context, request, response); }));}
    void SetMessageAllocatorFor_InviteUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::InviteUserRequest, ::smart3dmap::v1::UserInvitation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::InviteUserRequest, ::smart3dmap::v1::UserInvitation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_InviteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InviteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InviteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InviteUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetUserInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetUserInvitation() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetUserInvitationRequest, ::smart3dmap::v1::UserInvitation>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::GetUserInvitationRequest* request, ::smart3dmap::v1::UserInvitation* response) { return this->GetUserInvitation(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserInvitation(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::GetUserInvitationRequest, ::smart3dmap::v1::UserInvitation>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetUserInvitationRequest, ::smart3dmap::v1::UserInvitation>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetUserInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserInvitation(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetUserInvitation(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetUserInvitation(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RegisterUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::RegisterUserRequest, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::RegisterUserRequest* request, ::google::protobuf::BoolValue* response) { return this->RegisterUser(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::RegisterUserRequest, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::RegisterUserRequest, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RegisterUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ActiveUserByManager : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ActiveUserByManager() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ActiveUserByManagerRequest, ::smart3dmap::v1::User>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::ActiveUserByManagerRequest* request, ::smart3dmap::v1::User* response) { return this->ActiveUserByManager(context, request, response); }));}
    void SetMessageAllocatorFor_ActiveUserByManager(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::ActiveUserByManagerRequest, ::smart3dmap::v1::User>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ActiveUserByManagerRequest, ::smart3dmap::v1::User>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ActiveUserByManager() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActiveUserByManager(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ActiveUserByManager(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ActiveUserByManager(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ActivateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ActivateUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ActiveUserRequest, ::smart3dmap::v1::User>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::ActiveUserRequest* request, ::smart3dmap::v1::User* response) { return this->ActivateUser(context, request, response); }));}
    void SetMessageAllocatorFor_ActivateUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::ActiveUserRequest, ::smart3dmap::v1::User>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ActiveUserRequest, ::smart3dmap::v1::User>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ActivateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ActivateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ActivateUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetUserRequest, ::smart3dmap::v1::User>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::GetUserRequest* request, ::smart3dmap::v1::User* response) { return this->GetUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::GetUserRequest, ::smart3dmap::v1::User>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetUserRequest, ::smart3dmap::v1::User>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListUsers() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ListUsersRequest, ::smart3dmap::v1::ListUsersResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::ListUsersRequest* request, ::smart3dmap::v1::ListUsersResponse* response) { return this->ListUsers(context, request, response); }));}
    void SetMessageAllocatorFor_ListUsers(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::ListUsersRequest, ::smart3dmap::v1::ListUsersResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ListUsersRequest, ::smart3dmap::v1::ListUsersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUsers(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListUsers(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListUsers(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::UpdateUserRequest, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::UpdateUserRequest* request, ::google::protobuf::BoolValue* response) { return this->UpdateUser(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::UpdateUserRequest, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(9);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::UpdateUserRequest, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ResetUserPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ResetUserPassword() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ResetUserPasswordRequest, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::ResetUserPasswordRequest* request, ::google::protobuf::BoolValue* response) { return this->ResetUserPassword(context, request, response); }));}
    void SetMessageAllocatorFor_ResetUserPassword(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::ResetUserPasswordRequest, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(10);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ResetUserPasswordRequest, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ResetUserPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetUserPassword(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResetUserPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResetUserPassword(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::DeleteUserRequest, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::DeleteUserRequest* request, ::google::protobuf::BoolValue* response) { return this->DeleteUser(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::DeleteUserRequest, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::DeleteUserRequest, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_IsAdminUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_IsAdminUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::IsAdminUserRequest, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::IsAdminUserRequest* request, ::google::protobuf::BoolValue* response) { return this->IsAdminUser(context, request, response); }));}
    void SetMessageAllocatorFor_IsAdminUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::IsAdminUserRequest, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::IsAdminUserRequest, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_IsAdminUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsAdminUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* IsAdminUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* IsAdminUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AddTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AddTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response) { return this->AddTeam(context, request, response); }));}
    void SetMessageAllocatorFor_AddTeam(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(13);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AddTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::Team* request, ::google::protobuf::BoolValue* response) { return this->UpdateTeam(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateTeam(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(14);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::DeleteTeamRequest, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::DeleteTeamRequest* request, ::google::protobuf::BoolValue* response) { return this->DeleteTeam(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTeam(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::DeleteTeamRequest, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(15);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::DeleteTeamRequest, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListTeams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListTeams() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ListTeamsRequest, ::smart3dmap::v1::ListTeamsResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::ListTeamsRequest* request, ::smart3dmap::v1::ListTeamsResponse* response) { return this->ListTeams(context, request, response); }));}
    void SetMessageAllocatorFor_ListTeams(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::ListTeamsRequest, ::smart3dmap::v1::ListTeamsResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(16);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::ListTeamsRequest, ::smart3dmap::v1::ListTeamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListTeams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTeams(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListTeams(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListTeams(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetTeamRequest, ::smart3dmap::v1::Team>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::GetTeamRequest* request, ::smart3dmap::v1::Team* response) { return this->GetTeam(context, request, response); }));}
    void SetMessageAllocatorFor_GetTeam(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::GetTeamRequest, ::smart3dmap::v1::Team>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(17);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetTeamRequest, ::smart3dmap::v1::Team>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetTeamUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(18,
          new ::grpc::internal::CallbackServerStreamingHandler< ::smart3dmap::v1::GetTeamUserRequest, ::smart3dmap::v1::User>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::GetTeamUserRequest* request) { return this->GetTeamUser(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/, ::grpc::ServerWriter< ::smart3dmap::v1::User>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::smart3dmap::v1::User>* GetTeamUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::smart3dmap::v1::User>* GetTeamUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AddTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AddTeamUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response) { return this->AddTeamUser(context, request, response); }));}
    void SetMessageAllocatorFor_AddTeamUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(19);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AddTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddTeamUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddTeamUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteTeamUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::TeamUser* request, ::google::protobuf::BoolValue* response) { return this->DeleteTeamUser(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTeamUser(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(20);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteTeamUser(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteTeamUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_NewTicket<ExperimentalWithCallbackMethod_VerifyTicket<ExperimentalWithCallbackMethod_InviteUser<ExperimentalWithCallbackMethod_GetUserInvitation<ExperimentalWithCallbackMethod_RegisterUser<ExperimentalWithCallbackMethod_ActiveUserByManager<ExperimentalWithCallbackMethod_ActivateUser<ExperimentalWithCallbackMethod_GetUser<ExperimentalWithCallbackMethod_ListUsers<ExperimentalWithCallbackMethod_UpdateUser<ExperimentalWithCallbackMethod_ResetUserPassword<ExperimentalWithCallbackMethod_DeleteUser<ExperimentalWithCallbackMethod_IsAdminUser<ExperimentalWithCallbackMethod_AddTeam<ExperimentalWithCallbackMethod_UpdateTeam<ExperimentalWithCallbackMethod_DeleteTeam<ExperimentalWithCallbackMethod_ListTeams<ExperimentalWithCallbackMethod_GetTeam<ExperimentalWithCallbackMethod_GetTeamUser<ExperimentalWithCallbackMethod_AddTeamUser<ExperimentalWithCallbackMethod_DeleteTeamUser<Service > > > > > > > > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_NewTicket<ExperimentalWithCallbackMethod_VerifyTicket<ExperimentalWithCallbackMethod_InviteUser<ExperimentalWithCallbackMethod_GetUserInvitation<ExperimentalWithCallbackMethod_RegisterUser<ExperimentalWithCallbackMethod_ActiveUserByManager<ExperimentalWithCallbackMethod_ActivateUser<ExperimentalWithCallbackMethod_GetUser<ExperimentalWithCallbackMethod_ListUsers<ExperimentalWithCallbackMethod_UpdateUser<ExperimentalWithCallbackMethod_ResetUserPassword<ExperimentalWithCallbackMethod_DeleteUser<ExperimentalWithCallbackMethod_IsAdminUser<ExperimentalWithCallbackMethod_AddTeam<ExperimentalWithCallbackMethod_UpdateTeam<ExperimentalWithCallbackMethod_DeleteTeam<ExperimentalWithCallbackMethod_ListTeams<ExperimentalWithCallbackMethod_GetTeam<ExperimentalWithCallbackMethod_GetTeamUser<ExperimentalWithCallbackMethod_AddTeamUser<ExperimentalWithCallbackMethod_DeleteTeamUser<Service > > > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_NewTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_NewTicket() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_NewTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VerifyTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VerifyTicket() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_VerifyTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InviteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InviteUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_InviteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InviteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserInvitation() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetUserInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserInvitation(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterUser() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ActiveUserByManager : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ActiveUserByManager() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ActiveUserByManager() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActiveUserByManager(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ActivateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ActivateUser() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ActivateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUser() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListUsers() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ListUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUsers(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUser() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetUserPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResetUserPassword() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ResetUserPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetUserPassword(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteUser() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsAdminUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IsAdminUser() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_IsAdminUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsAdminUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddTeam() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_AddTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateTeam() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_UpdateTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTeam() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeleteTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTeams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTeams() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ListTeams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTeams(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTeam() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTeamUser() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/, ::grpc::ServerWriter< ::smart3dmap::v1::User>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddTeamUser() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_AddTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTeamUser() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_DeleteTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_NewTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_NewTicket() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_NewTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewTicket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VerifyTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VerifyTicket() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_VerifyTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyTicket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InviteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InviteUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_InviteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InviteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInviteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserInvitation() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetUserInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserInvitation(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserInvitation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ActiveUserByManager : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ActiveUserByManager() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ActiveUserByManager() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActiveUserByManager(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActiveUserByManager(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ActivateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ActivateUser() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ActivateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUser() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListUsers() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ListUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUsers(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUsers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResetUserPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResetUserPassword() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ResetUserPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetUserPassword(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetUserPassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteUser() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IsAdminUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IsAdminUser() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_IsAdminUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsAdminUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsAdminUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddTeam() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_AddTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddTeam(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateTeam() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_UpdateTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTeam(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTeam() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeleteTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTeam(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTeams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTeams() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ListTeams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTeams(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTeams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTeam() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeam(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTeamUser() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/, ::grpc::ServerWriter< ::smart3dmap::v1::User>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeamUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(18, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddTeamUser() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_AddTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddTeamUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTeamUser() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_DeleteTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTeamUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_NewTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_NewTicket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->NewTicket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_NewTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* NewTicket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* NewTicket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_VerifyTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_VerifyTicket() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VerifyTicket(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_VerifyTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* VerifyTicket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* VerifyTicket(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_InviteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_InviteUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InviteUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_InviteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InviteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* InviteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* InviteUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetUserInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetUserInvitation() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserInvitation(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetUserInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserInvitation(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetUserInvitation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetUserInvitation(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RegisterUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RegisterUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ActiveUserByManager : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ActiveUserByManager() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ActiveUserByManager(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ActiveUserByManager() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActiveUserByManager(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ActiveUserByManager(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ActiveUserByManager(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ActivateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ActivateUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ActivateUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ActivateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ActivateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ActivateUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListUsers() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListUsers(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUsers(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListUsers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListUsers(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ResetUserPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ResetUserPassword() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResetUserPassword(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ResetUserPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetUserPassword(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResetUserPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResetUserPassword(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_IsAdminUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_IsAdminUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IsAdminUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_IsAdminUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsAdminUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* IsAdminUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* IsAdminUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AddTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AddTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddTeam(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AddTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateTeam(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTeam(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListTeams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListTeams() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListTeams(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListTeams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTeams(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListTeams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListTeams(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetTeam() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTeam(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetTeam(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetTeam(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetTeamUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetTeamUser(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/, ::grpc::ServerWriter< ::smart3dmap::v1::User>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetTeamUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetTeamUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AddTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AddTeamUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddTeamUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AddTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddTeamUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddTeamUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteTeamUser() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTeamUser(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteTeamUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteTeamUser(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NewTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_NewTicket() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::NewTicketRequest, ::smart3dmap::v1::Ticket>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::NewTicketRequest, ::smart3dmap::v1::Ticket>* streamer) {
                       return this->StreamedNewTicket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_NewTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NewTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::NewTicketRequest* /*request*/, ::smart3dmap::v1::Ticket* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNewTicket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::NewTicketRequest,::smart3dmap::v1::Ticket>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VerifyTicket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VerifyTicket() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::Ticket, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::Ticket, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedVerifyTicket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VerifyTicket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VerifyTicket(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Ticket* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVerifyTicket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::Ticket,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InviteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InviteUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::InviteUserRequest, ::smart3dmap::v1::UserInvitation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::InviteUserRequest, ::smart3dmap::v1::UserInvitation>* streamer) {
                       return this->StreamedInviteUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InviteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InviteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::InviteUserRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInviteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::InviteUserRequest,::smart3dmap::v1::UserInvitation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserInvitation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserInvitation() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::GetUserInvitationRequest, ::smart3dmap::v1::UserInvitation>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::GetUserInvitationRequest, ::smart3dmap::v1::UserInvitation>* streamer) {
                       return this->StreamedGetUserInvitation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserInvitation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserInvitation(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserInvitationRequest* /*request*/, ::smart3dmap::v1::UserInvitation* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserInvitation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::GetUserInvitationRequest,::smart3dmap::v1::UserInvitation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterUser() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::RegisterUserRequest, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::RegisterUserRequest, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedRegisterUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::RegisterUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::RegisterUserRequest,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ActiveUserByManager : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ActiveUserByManager() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::ActiveUserByManagerRequest, ::smart3dmap::v1::User>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::ActiveUserByManagerRequest, ::smart3dmap::v1::User>* streamer) {
                       return this->StreamedActiveUserByManager(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ActiveUserByManager() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ActiveUserByManager(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserByManagerRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedActiveUserByManager(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::ActiveUserByManagerRequest,::smart3dmap::v1::User>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ActivateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ActivateUser() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::ActiveUserRequest, ::smart3dmap::v1::User>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::ActiveUserRequest, ::smart3dmap::v1::User>* streamer) {
                       return this->StreamedActivateUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ActivateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ActivateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ActiveUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedActivateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::ActiveUserRequest,::smart3dmap::v1::User>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUser() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::GetUserRequest, ::smart3dmap::v1::User>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::GetUserRequest, ::smart3dmap::v1::User>* streamer) {
                       return this->StreamedGetUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetUserRequest* /*request*/, ::smart3dmap::v1::User* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::GetUserRequest,::smart3dmap::v1::User>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListUsers() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::ListUsersRequest, ::smart3dmap::v1::ListUsersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::ListUsersRequest, ::smart3dmap::v1::ListUsersResponse>* streamer) {
                       return this->StreamedListUsers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUsers(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListUsersRequest* /*request*/, ::smart3dmap::v1::ListUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListUsers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::ListUsersRequest,::smart3dmap::v1::ListUsersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUser() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::UpdateUserRequest, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::UpdateUserRequest, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedUpdateUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UpdateUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::UpdateUserRequest,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetUserPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResetUserPassword() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::ResetUserPasswordRequest, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::ResetUserPasswordRequest, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedResetUserPassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResetUserPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetUserPassword(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ResetUserPasswordRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetUserPassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::ResetUserPasswordRequest,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteUser() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::DeleteUserRequest, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::DeleteUserRequest, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedDeleteUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::DeleteUserRequest,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsAdminUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IsAdminUser() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::IsAdminUserRequest, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::IsAdminUserRequest, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedIsAdminUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IsAdminUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsAdminUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::IsAdminUserRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsAdminUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::IsAdminUserRequest,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddTeam() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedAddTeam(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddTeam(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::Team,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateTeam() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::Team, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedUpdateTeam(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::Team* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateTeam(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::Team,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTeam() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::DeleteTeamRequest, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::DeleteTeamRequest, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedDeleteTeam(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteTeamRequest* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTeam(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::DeleteTeamRequest,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTeams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListTeams() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::ListTeamsRequest, ::smart3dmap::v1::ListTeamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::ListTeamsRequest, ::smart3dmap::v1::ListTeamsResponse>* streamer) {
                       return this->StreamedListTeams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListTeams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTeams(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::ListTeamsRequest* /*request*/, ::smart3dmap::v1::ListTeamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTeams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::ListTeamsRequest,::smart3dmap::v1::ListTeamsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTeam : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTeam() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::GetTeamRequest, ::smart3dmap::v1::Team>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::GetTeamRequest, ::smart3dmap::v1::Team>* streamer) {
                       return this->StreamedGetTeam(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTeam() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTeam(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamRequest* /*request*/, ::smart3dmap::v1::Team* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTeam(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::GetTeamRequest,::smart3dmap::v1::Team>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddTeamUser() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedAddTeamUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddTeamUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::TeamUser,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTeamUser() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::TeamUser, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedDeleteTeamUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::TeamUser* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTeamUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::TeamUser,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_NewTicket<WithStreamedUnaryMethod_VerifyTicket<WithStreamedUnaryMethod_InviteUser<WithStreamedUnaryMethod_GetUserInvitation<WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_ActiveUserByManager<WithStreamedUnaryMethod_ActivateUser<WithStreamedUnaryMethod_GetUser<WithStreamedUnaryMethod_ListUsers<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_ResetUserPassword<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_IsAdminUser<WithStreamedUnaryMethod_AddTeam<WithStreamedUnaryMethod_UpdateTeam<WithStreamedUnaryMethod_DeleteTeam<WithStreamedUnaryMethod_ListTeams<WithStreamedUnaryMethod_GetTeam<WithStreamedUnaryMethod_AddTeamUser<WithStreamedUnaryMethod_DeleteTeamUser<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetTeamUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetTeamUser() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::smart3dmap::v1::GetTeamUserRequest, ::smart3dmap::v1::User>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::smart3dmap::v1::GetTeamUserRequest, ::smart3dmap::v1::User>* streamer) {
                       return this->StreamedGetTeamUser(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetTeamUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTeamUser(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetTeamUserRequest* /*request*/, ::grpc::ServerWriter< ::smart3dmap::v1::User>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetTeamUser(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::smart3dmap::v1::GetTeamUserRequest,::smart3dmap::v1::User>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetTeamUser<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_NewTicket<WithStreamedUnaryMethod_VerifyTicket<WithStreamedUnaryMethod_InviteUser<WithStreamedUnaryMethod_GetUserInvitation<WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_ActiveUserByManager<WithStreamedUnaryMethod_ActivateUser<WithStreamedUnaryMethod_GetUser<WithStreamedUnaryMethod_ListUsers<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_ResetUserPassword<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_IsAdminUser<WithStreamedUnaryMethod_AddTeam<WithStreamedUnaryMethod_UpdateTeam<WithStreamedUnaryMethod_DeleteTeam<WithStreamedUnaryMethod_ListTeams<WithStreamedUnaryMethod_GetTeam<WithSplitStreamingMethod_GetTeamUser<WithStreamedUnaryMethod_AddTeamUser<WithStreamedUnaryMethod_DeleteTeamUser<Service > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace smart3dmap


#endif  // GRPC_user_5fmanager_2fuser_5fmanager_2eproto__INCLUDED
