// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: model_exporter/model_exporter.proto
#ifndef GRPC_model_5fexporter_2fmodel_5fexporter_2eproto__INCLUDED
#define GRPC_model_5fexporter_2fmodel_5fexporter_2eproto__INCLUDED

#include "model_exporter/model_exporter.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace smart3dmap {
namespace v1 {

class ModelExport final {
 public:
  static constexpr char const* service_full_name() {
    return "smart3dmap.v1.ModelExport";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 转换模型数据为指定格式。
    virtual ::grpc::Status MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::smart3dmap::v1::MdlExportReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::MdlExportReply>> AsyncMdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::MdlExportReply>>(AsyncMdlExportOrConvRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::MdlExportReply>> PrepareAsyncMdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::MdlExportReply>>(PrepareAsyncMdlExportOrConvRaw(context, request, cq));
    }
    // 查询已导出的模型数据的URL。
    virtual ::grpc::Status GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::smart3dmap::v1::GetExportedModelURLResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::GetExportedModelURLResponse>> AsyncGetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::GetExportedModelURLResponse>>(AsyncGetExportedModelURLRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::GetExportedModelURLResponse>> PrepareAsyncGetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::GetExportedModelURLResponse>>(PrepareAsyncGetExportedModelURLRaw(context, request, cq));
    }
    // 删除已导出的模型数据。
    virtual ::grpc::Status DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::smart3dmap::v1::DeleteExportedModelResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::DeleteExportedModelResponse>> AsyncDeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::DeleteExportedModelResponse>>(AsyncDeleteExportedModelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::DeleteExportedModelResponse>> PrepareAsyncDeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::DeleteExportedModelResponse>>(PrepareAsyncDeleteExportedModelRaw(context, request, cq));
    }
    // 上传已导出的模型数据文件到服务器。注：该方法会覆盖已有文件。
    virtual ::grpc::Status UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::smart3dmap::v1::UploadExportedModelFileResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadExportedModelFileResponse>> AsyncUploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadExportedModelFileResponse>>(AsyncUploadExportedModelFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadExportedModelFileResponse>> PrepareAsyncUploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadExportedModelFileResponse>>(PrepareAsyncUploadExportedModelFileRaw(context, request, cq));
    }
    // 上传模型的图例文件。仅支持*.png图片。
    virtual ::grpc::Status UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadModelLegendPictureResponse>> AsyncUploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadModelLegendPictureResponse>>(AsyncUploadLegendPictureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadModelLegendPictureResponse>> PrepareAsyncUploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadModelLegendPictureResponse>>(PrepareAsyncUploadLegendPictureRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // 转换模型数据为指定格式。
      virtual void MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 查询已导出的模型数据的URL。
      virtual void GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 删除已导出的模型数据。
      virtual void DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 上传已导出的模型数据文件到服务器。注：该方法会覆盖已有文件。
      virtual void UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 上传模型的图例文件。仅支持*.png图片。
      virtual void UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::MdlExportReply>* AsyncMdlExportOrConvRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::MdlExportReply>* PrepareAsyncMdlExportOrConvRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::GetExportedModelURLResponse>* AsyncGetExportedModelURLRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::GetExportedModelURLResponse>* PrepareAsyncGetExportedModelURLRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::DeleteExportedModelResponse>* AsyncDeleteExportedModelRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::DeleteExportedModelResponse>* PrepareAsyncDeleteExportedModelRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadExportedModelFileResponse>* AsyncUploadExportedModelFileRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadExportedModelFileResponse>* PrepareAsyncUploadExportedModelFileRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadModelLegendPictureResponse>* AsyncUploadLegendPictureRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::smart3dmap::v1::UploadModelLegendPictureResponse>* PrepareAsyncUploadLegendPictureRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::smart3dmap::v1::MdlExportReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::MdlExportReply>> AsyncMdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::MdlExportReply>>(AsyncMdlExportOrConvRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::MdlExportReply>> PrepareAsyncMdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::MdlExportReply>>(PrepareAsyncMdlExportOrConvRaw(context, request, cq));
    }
    ::grpc::Status GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::smart3dmap::v1::GetExportedModelURLResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::GetExportedModelURLResponse>> AsyncGetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::GetExportedModelURLResponse>>(AsyncGetExportedModelURLRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::GetExportedModelURLResponse>> PrepareAsyncGetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::GetExportedModelURLResponse>>(PrepareAsyncGetExportedModelURLRaw(context, request, cq));
    }
    ::grpc::Status DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::smart3dmap::v1::DeleteExportedModelResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::DeleteExportedModelResponse>> AsyncDeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::DeleteExportedModelResponse>>(AsyncDeleteExportedModelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::DeleteExportedModelResponse>> PrepareAsyncDeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::DeleteExportedModelResponse>>(PrepareAsyncDeleteExportedModelRaw(context, request, cq));
    }
    ::grpc::Status UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::smart3dmap::v1::UploadExportedModelFileResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadExportedModelFileResponse>> AsyncUploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadExportedModelFileResponse>>(AsyncUploadExportedModelFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadExportedModelFileResponse>> PrepareAsyncUploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadExportedModelFileResponse>>(PrepareAsyncUploadExportedModelFileRaw(context, request, cq));
    }
    ::grpc::Status UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadModelLegendPictureResponse>> AsyncUploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadModelLegendPictureResponse>>(AsyncUploadLegendPictureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadModelLegendPictureResponse>> PrepareAsyncUploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadModelLegendPictureResponse>>(PrepareAsyncUploadLegendPictureRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void MdlExportOrConv(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetExportedModelURL(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteExportedModel(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UploadExportedModelFile(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UploadLegendPicture(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::MdlExportReply>* AsyncMdlExportOrConvRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::MdlExportReply>* PrepareAsyncMdlExportOrConvRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::MdlExportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::GetExportedModelURLResponse>* AsyncGetExportedModelURLRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::GetExportedModelURLResponse>* PrepareAsyncGetExportedModelURLRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::DeleteExportedModelResponse>* AsyncDeleteExportedModelRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::DeleteExportedModelResponse>* PrepareAsyncDeleteExportedModelRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadExportedModelFileResponse>* AsyncUploadExportedModelFileRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadExportedModelFileResponse>* PrepareAsyncUploadExportedModelFileRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadModelLegendPictureResponse>* AsyncUploadLegendPictureRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::smart3dmap::v1::UploadModelLegendPictureResponse>* PrepareAsyncUploadLegendPictureRaw(::grpc::ClientContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_MdlExportOrConv_;
    const ::grpc::internal::RpcMethod rpcmethod_GetExportedModelURL_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteExportedModel_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadExportedModelFile_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadLegendPicture_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 转换模型数据为指定格式。
    virtual ::grpc::Status MdlExportOrConv(::grpc::ServerContext* context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response);
    // 查询已导出的模型数据的URL。
    virtual ::grpc::Status GetExportedModelURL(::grpc::ServerContext* context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response);
    // 删除已导出的模型数据。
    virtual ::grpc::Status DeleteExportedModel(::grpc::ServerContext* context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response);
    // 上传已导出的模型数据文件到服务器。注：该方法会覆盖已有文件。
    virtual ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response);
    // 上传模型的图例文件。仅支持*.png图片。
    virtual ::grpc::Status UploadLegendPicture(::grpc::ServerContext* context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_MdlExportOrConv : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MdlExportOrConv() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_MdlExportOrConv() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MdlExportOrConv(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMdlExportOrConv(::grpc::ServerContext* context, ::smart3dmap::v1::MdlExportRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::MdlExportReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetExportedModelURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetExportedModelURL() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetExportedModelURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExportedModelURL(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetExportedModelURL(::grpc::ServerContext* context, ::smart3dmap::v1::GetExportedModelURLRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::GetExportedModelURLResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteExportedModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteExportedModel() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteExportedModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteExportedModel(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteExportedModel(::grpc::ServerContext* context, ::smart3dmap::v1::DeleteExportedModelRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::DeleteExportedModelResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadExportedModelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadExportedModelFile() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UploadExportedModelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadExportedModelFile(::grpc::ServerContext* context, ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::UploadExportedModelFileResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadLegendPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadLegendPicture() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UploadLegendPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadLegendPicture(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadLegendPicture(::grpc::ServerContext* context, ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::grpc::ServerAsyncResponseWriter< ::smart3dmap::v1::UploadModelLegendPictureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_MdlExportOrConv<WithAsyncMethod_GetExportedModelURL<WithAsyncMethod_DeleteExportedModel<WithAsyncMethod_UploadExportedModelFile<WithAsyncMethod_UploadLegendPicture<Service > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_MdlExportOrConv : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_MdlExportOrConv() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::MdlExportRequest, ::smart3dmap::v1::MdlExportReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::MdlExportRequest* request, ::smart3dmap::v1::MdlExportReply* response) { return this->MdlExportOrConv(context, request, response); }));}
    void SetMessageAllocatorFor_MdlExportOrConv(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::MdlExportRequest, ::smart3dmap::v1::MdlExportReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::MdlExportRequest, ::smart3dmap::v1::MdlExportReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_MdlExportOrConv() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MdlExportOrConv(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* MdlExportOrConv(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* MdlExportOrConv(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetExportedModelURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetExportedModelURL() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetExportedModelURLRequest, ::smart3dmap::v1::GetExportedModelURLResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::GetExportedModelURLRequest* request, ::smart3dmap::v1::GetExportedModelURLResponse* response) { return this->GetExportedModelURL(context, request, response); }));}
    void SetMessageAllocatorFor_GetExportedModelURL(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::GetExportedModelURLRequest, ::smart3dmap::v1::GetExportedModelURLResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::GetExportedModelURLRequest, ::smart3dmap::v1::GetExportedModelURLResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetExportedModelURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExportedModelURL(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetExportedModelURL(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetExportedModelURL(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteExportedModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteExportedModel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::DeleteExportedModelRequest, ::smart3dmap::v1::DeleteExportedModelResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::DeleteExportedModelRequest* request, ::smart3dmap::v1::DeleteExportedModelResponse* response) { return this->DeleteExportedModel(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteExportedModel(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::DeleteExportedModelRequest, ::smart3dmap::v1::DeleteExportedModelResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::DeleteExportedModelRequest, ::smart3dmap::v1::DeleteExportedModelResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteExportedModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteExportedModel(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteExportedModel(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteExportedModel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UploadExportedModelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UploadExportedModelFile() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::UploadExportedModelFileRequest, ::smart3dmap::v1::UploadExportedModelFileResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::UploadExportedModelFileRequest* request, ::smart3dmap::v1::UploadExportedModelFileResponse* response) { return this->UploadExportedModelFile(context, request, response); }));}
    void SetMessageAllocatorFor_UploadExportedModelFile(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::UploadExportedModelFileRequest, ::smart3dmap::v1::UploadExportedModelFileResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::UploadExportedModelFileRequest, ::smart3dmap::v1::UploadExportedModelFileResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UploadExportedModelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UploadExportedModelFile(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UploadExportedModelFile(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UploadLegendPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UploadLegendPicture() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::UploadModelLegendPictureRequest, ::smart3dmap::v1::UploadModelLegendPictureResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::smart3dmap::v1::UploadModelLegendPictureRequest* request, ::smart3dmap::v1::UploadModelLegendPictureResponse* response) { return this->UploadLegendPicture(context, request, response); }));}
    void SetMessageAllocatorFor_UploadLegendPicture(
        ::grpc::experimental::MessageAllocator< ::smart3dmap::v1::UploadModelLegendPictureRequest, ::smart3dmap::v1::UploadModelLegendPictureResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::smart3dmap::v1::UploadModelLegendPictureRequest, ::smart3dmap::v1::UploadModelLegendPictureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UploadLegendPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadLegendPicture(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UploadLegendPicture(
      ::grpc::CallbackServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UploadLegendPicture(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_MdlExportOrConv<ExperimentalWithCallbackMethod_GetExportedModelURL<ExperimentalWithCallbackMethod_DeleteExportedModel<ExperimentalWithCallbackMethod_UploadExportedModelFile<ExperimentalWithCallbackMethod_UploadLegendPicture<Service > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_MdlExportOrConv<ExperimentalWithCallbackMethod_GetExportedModelURL<ExperimentalWithCallbackMethod_DeleteExportedModel<ExperimentalWithCallbackMethod_UploadExportedModelFile<ExperimentalWithCallbackMethod_UploadLegendPicture<Service > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_MdlExportOrConv : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MdlExportOrConv() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_MdlExportOrConv() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MdlExportOrConv(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetExportedModelURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetExportedModelURL() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetExportedModelURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExportedModelURL(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteExportedModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteExportedModel() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteExportedModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteExportedModel(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadExportedModelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadExportedModelFile() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UploadExportedModelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadLegendPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadLegendPicture() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UploadLegendPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadLegendPicture(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_MdlExportOrConv : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MdlExportOrConv() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_MdlExportOrConv() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MdlExportOrConv(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMdlExportOrConv(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetExportedModelURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetExportedModelURL() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetExportedModelURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExportedModelURL(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetExportedModelURL(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteExportedModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteExportedModel() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteExportedModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteExportedModel(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteExportedModel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadExportedModelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadExportedModelFile() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UploadExportedModelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadExportedModelFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadLegendPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadLegendPicture() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UploadLegendPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadLegendPicture(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadLegendPicture(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_MdlExportOrConv : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_MdlExportOrConv() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MdlExportOrConv(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_MdlExportOrConv() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MdlExportOrConv(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* MdlExportOrConv(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* MdlExportOrConv(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetExportedModelURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetExportedModelURL() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetExportedModelURL(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetExportedModelURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExportedModelURL(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetExportedModelURL(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetExportedModelURL(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteExportedModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteExportedModel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteExportedModel(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteExportedModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteExportedModel(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteExportedModel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteExportedModel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UploadExportedModelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UploadExportedModelFile() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadExportedModelFile(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UploadExportedModelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UploadExportedModelFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UploadExportedModelFile(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UploadLegendPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UploadLegendPicture() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadLegendPicture(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UploadLegendPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadLegendPicture(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UploadLegendPicture(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UploadLegendPicture(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MdlExportOrConv : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MdlExportOrConv() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::MdlExportRequest, ::smart3dmap::v1::MdlExportReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::MdlExportRequest, ::smart3dmap::v1::MdlExportReply>* streamer) {
                       return this->StreamedMdlExportOrConv(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MdlExportOrConv() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MdlExportOrConv(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::MdlExportRequest* /*request*/, ::smart3dmap::v1::MdlExportReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMdlExportOrConv(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::MdlExportRequest,::smart3dmap::v1::MdlExportReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetExportedModelURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetExportedModelURL() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::GetExportedModelURLRequest, ::smart3dmap::v1::GetExportedModelURLResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::GetExportedModelURLRequest, ::smart3dmap::v1::GetExportedModelURLResponse>* streamer) {
                       return this->StreamedGetExportedModelURL(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetExportedModelURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetExportedModelURL(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::GetExportedModelURLRequest* /*request*/, ::smart3dmap::v1::GetExportedModelURLResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetExportedModelURL(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::GetExportedModelURLRequest,::smart3dmap::v1::GetExportedModelURLResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteExportedModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteExportedModel() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::DeleteExportedModelRequest, ::smart3dmap::v1::DeleteExportedModelResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::DeleteExportedModelRequest, ::smart3dmap::v1::DeleteExportedModelResponse>* streamer) {
                       return this->StreamedDeleteExportedModel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteExportedModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteExportedModel(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::DeleteExportedModelRequest* /*request*/, ::smart3dmap::v1::DeleteExportedModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteExportedModel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::DeleteExportedModelRequest,::smart3dmap::v1::DeleteExportedModelResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadExportedModelFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadExportedModelFile() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::UploadExportedModelFileRequest, ::smart3dmap::v1::UploadExportedModelFileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::UploadExportedModelFileRequest, ::smart3dmap::v1::UploadExportedModelFileResponse>* streamer) {
                       return this->StreamedUploadExportedModelFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadExportedModelFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadExportedModelFile(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadExportedModelFileRequest* /*request*/, ::smart3dmap::v1::UploadExportedModelFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadExportedModelFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::UploadExportedModelFileRequest,::smart3dmap::v1::UploadExportedModelFileResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadLegendPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadLegendPicture() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::smart3dmap::v1::UploadModelLegendPictureRequest, ::smart3dmap::v1::UploadModelLegendPictureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::smart3dmap::v1::UploadModelLegendPictureRequest, ::smart3dmap::v1::UploadModelLegendPictureResponse>* streamer) {
                       return this->StreamedUploadLegendPicture(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadLegendPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadLegendPicture(::grpc::ServerContext* /*context*/, const ::smart3dmap::v1::UploadModelLegendPictureRequest* /*request*/, ::smart3dmap::v1::UploadModelLegendPictureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadLegendPicture(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::smart3dmap::v1::UploadModelLegendPictureRequest,::smart3dmap::v1::UploadModelLegendPictureResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_MdlExportOrConv<WithStreamedUnaryMethod_GetExportedModelURL<WithStreamedUnaryMethod_DeleteExportedModel<WithStreamedUnaryMethod_UploadExportedModelFile<WithStreamedUnaryMethod_UploadLegendPicture<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_MdlExportOrConv<WithStreamedUnaryMethod_GetExportedModelURL<WithStreamedUnaryMethod_DeleteExportedModel<WithStreamedUnaryMethod_UploadExportedModelFile<WithStreamedUnaryMethod_UploadLegendPicture<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace smart3dmap


#endif  // GRPC_model_5fexporter_2fmodel_5fexporter_2eproto__INCLUDED
