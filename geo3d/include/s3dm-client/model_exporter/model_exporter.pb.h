// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_exporter/model_exporter.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_model_5fexporter_2fmodel_5fexporter_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_model_5fexporter_2fmodel_5fexporter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_model_5fexporter_2fmodel_5fexporter_2eproto LIBS3DMGRPC_API
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct LIBS3DMGRPC_API TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern LIBS3DMGRPC_API const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto;
LIBS3DMGRPC_API ::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(int index);
namespace smart3dmap {
namespace v1 {
class DeleteExportedModelRequest;
struct DeleteExportedModelRequestDefaultTypeInternal;
LIBS3DMGRPC_API extern DeleteExportedModelRequestDefaultTypeInternal _DeleteExportedModelRequest_default_instance_;
class DeleteExportedModelResponse;
struct DeleteExportedModelResponseDefaultTypeInternal;
LIBS3DMGRPC_API extern DeleteExportedModelResponseDefaultTypeInternal _DeleteExportedModelResponse_default_instance_;
class GetExportedModelURLRequest;
struct GetExportedModelURLRequestDefaultTypeInternal;
LIBS3DMGRPC_API extern GetExportedModelURLRequestDefaultTypeInternal _GetExportedModelURLRequest_default_instance_;
class GetExportedModelURLResponse;
struct GetExportedModelURLResponseDefaultTypeInternal;
LIBS3DMGRPC_API extern GetExportedModelURLResponseDefaultTypeInternal _GetExportedModelURLResponse_default_instance_;
class MdlExportReply;
struct MdlExportReplyDefaultTypeInternal;
LIBS3DMGRPC_API extern MdlExportReplyDefaultTypeInternal _MdlExportReply_default_instance_;
class MdlExportRequest;
struct MdlExportRequestDefaultTypeInternal;
LIBS3DMGRPC_API extern MdlExportRequestDefaultTypeInternal _MdlExportRequest_default_instance_;
class ParaOf3dtiles;
struct ParaOf3dtilesDefaultTypeInternal;
LIBS3DMGRPC_API extern ParaOf3dtilesDefaultTypeInternal _ParaOf3dtiles_default_instance_;
class UploadExportedModelFileRequest;
struct UploadExportedModelFileRequestDefaultTypeInternal;
LIBS3DMGRPC_API extern UploadExportedModelFileRequestDefaultTypeInternal _UploadExportedModelFileRequest_default_instance_;
class UploadExportedModelFileResponse;
struct UploadExportedModelFileResponseDefaultTypeInternal;
LIBS3DMGRPC_API extern UploadExportedModelFileResponseDefaultTypeInternal _UploadExportedModelFileResponse_default_instance_;
class UploadModelLegendPictureRequest;
struct UploadModelLegendPictureRequestDefaultTypeInternal;
LIBS3DMGRPC_API extern UploadModelLegendPictureRequestDefaultTypeInternal _UploadModelLegendPictureRequest_default_instance_;
class UploadModelLegendPictureResponse;
struct UploadModelLegendPictureResponseDefaultTypeInternal;
LIBS3DMGRPC_API extern UploadModelLegendPictureResponseDefaultTypeInternal _UploadModelLegendPictureResponse_default_instance_;
}  // namespace v1
}  // namespace smart3dmap
PROTOBUF_NAMESPACE_OPEN
template<> LIBS3DMGRPC_API ::smart3dmap::v1::DeleteExportedModelRequest* Arena::CreateMaybeMessage<::smart3dmap::v1::DeleteExportedModelRequest>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::DeleteExportedModelResponse* Arena::CreateMaybeMessage<::smart3dmap::v1::DeleteExportedModelResponse>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::GetExportedModelURLRequest* Arena::CreateMaybeMessage<::smart3dmap::v1::GetExportedModelURLRequest>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::GetExportedModelURLResponse* Arena::CreateMaybeMessage<::smart3dmap::v1::GetExportedModelURLResponse>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::MdlExportReply* Arena::CreateMaybeMessage<::smart3dmap::v1::MdlExportReply>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::MdlExportRequest* Arena::CreateMaybeMessage<::smart3dmap::v1::MdlExportRequest>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::ParaOf3dtiles* Arena::CreateMaybeMessage<::smart3dmap::v1::ParaOf3dtiles>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::UploadExportedModelFileRequest* Arena::CreateMaybeMessage<::smart3dmap::v1::UploadExportedModelFileRequest>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::UploadExportedModelFileResponse* Arena::CreateMaybeMessage<::smart3dmap::v1::UploadExportedModelFileResponse>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::UploadModelLegendPictureRequest* Arena::CreateMaybeMessage<::smart3dmap::v1::UploadModelLegendPictureRequest>(Arena*);
template<> LIBS3DMGRPC_API ::smart3dmap::v1::UploadModelLegendPictureResponse* Arena::CreateMaybeMessage<::smart3dmap::v1::UploadModelLegendPictureResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace smart3dmap {
namespace v1 {

enum ModelFormat : int {
  MODEL_FORMAT_UNKNOWN = 0,
  MODEL_FORMAT_3DTILES = 1,
  MODEL_FORMAT_OBJ = 2,
  ModelFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ModelFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
LIBS3DMGRPC_API bool ModelFormat_IsValid(int value);
constexpr ModelFormat ModelFormat_MIN = MODEL_FORMAT_UNKNOWN;
constexpr ModelFormat ModelFormat_MAX = MODEL_FORMAT_OBJ;
constexpr int ModelFormat_ARRAYSIZE = ModelFormat_MAX + 1;

LIBS3DMGRPC_API const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ModelFormat_descriptor();
template<typename T>
inline const std::string& ModelFormat_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ModelFormat>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ModelFormat_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ModelFormat_descriptor(), enum_t_value);
}
inline bool ModelFormat_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ModelFormat* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ModelFormat>(
    ModelFormat_descriptor(), name, value);
}
enum ZoneType : int {
  ZONE_TYPE_OF_3DEGREE = 0,
  ZONE_TYPE_OF_6DEGREE = 1,
  ZoneType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ZoneType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
LIBS3DMGRPC_API bool ZoneType_IsValid(int value);
constexpr ZoneType ZoneType_MIN = ZONE_TYPE_OF_3DEGREE;
constexpr ZoneType ZoneType_MAX = ZONE_TYPE_OF_6DEGREE;
constexpr int ZoneType_ARRAYSIZE = ZoneType_MAX + 1;

LIBS3DMGRPC_API const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ZoneType_descriptor();
template<typename T>
inline const std::string& ZoneType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ZoneType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ZoneType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ZoneType_descriptor(), enum_t_value);
}
inline bool ZoneType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ZoneType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ZoneType>(
    ZoneType_descriptor(), name, value);
}
// ===================================================================

class LIBS3DMGRPC_API ParaOf3dtiles PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.ParaOf3dtiles) */ {
 public:
  inline ParaOf3dtiles() : ParaOf3dtiles(nullptr) {}
  virtual ~ParaOf3dtiles();
  explicit constexpr ParaOf3dtiles(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParaOf3dtiles(const ParaOf3dtiles& from);
  ParaOf3dtiles(ParaOf3dtiles&& from) noexcept
    : ParaOf3dtiles() {
    *this = ::std::move(from);
  }

  inline ParaOf3dtiles& operator=(const ParaOf3dtiles& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParaOf3dtiles& operator=(ParaOf3dtiles&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParaOf3dtiles& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParaOf3dtiles* internal_default_instance() {
    return reinterpret_cast<const ParaOf3dtiles*>(
               &_ParaOf3dtiles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParaOf3dtiles& a, ParaOf3dtiles& b) {
    a.Swap(&b);
  }
  inline void Swap(ParaOf3dtiles* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParaOf3dtiles* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParaOf3dtiles* New() const final {
    return CreateMaybeMessage<ParaOf3dtiles>(nullptr);
  }

  ParaOf3dtiles* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParaOf3dtiles>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParaOf3dtiles& from);
  void MergeFrom(const ParaOf3dtiles& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParaOf3dtiles* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.ParaOf3dtiles";
  }
  protected:
  explicit ParaOf3dtiles(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoreholenumOfBinaryfileFieldNumber = 1,
    kIsTransLonlatcoordFieldNumber = 2,
    kIsAddPlusFieldNumber = 3,
    kZoneTypeFieldNumber = 4,
    kProjZoneFieldNumber = 5,
    kLongitudeFieldNumber = 6,
  };
  // int32 boreholenum_of_binaryfile = 1;
  void clear_boreholenum_of_binaryfile();
  ::PROTOBUF_NAMESPACE_ID::int32 boreholenum_of_binaryfile() const;
  void set_boreholenum_of_binaryfile(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_boreholenum_of_binaryfile() const;
  void _internal_set_boreholenum_of_binaryfile(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_trans_lonlatcoord = 2;
  void clear_is_trans_lonlatcoord();
  bool is_trans_lonlatcoord() const;
  void set_is_trans_lonlatcoord(bool value);
  private:
  bool _internal_is_trans_lonlatcoord() const;
  void _internal_set_is_trans_lonlatcoord(bool value);
  public:

  // bool is_add_plus = 3;
  void clear_is_add_plus();
  bool is_add_plus() const;
  void set_is_add_plus(bool value);
  private:
  bool _internal_is_add_plus() const;
  void _internal_set_is_add_plus(bool value);
  public:

  // .smart3dmap.v1.ZoneType zone_type = 4;
  void clear_zone_type();
  ::smart3dmap::v1::ZoneType zone_type() const;
  void set_zone_type(::smart3dmap::v1::ZoneType value);
  private:
  ::smart3dmap::v1::ZoneType _internal_zone_type() const;
  void _internal_set_zone_type(::smart3dmap::v1::ZoneType value);
  public:

  // int32 proj_zone = 5;
  void clear_proj_zone();
  ::PROTOBUF_NAMESPACE_ID::int32 proj_zone() const;
  void set_proj_zone(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_proj_zone() const;
  void _internal_set_proj_zone(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double longitude = 6;
  void clear_longitude();
  double longitude() const;
  void set_longitude(double value);
  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.ParaOf3dtiles)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 boreholenum_of_binaryfile_;
  bool is_trans_lonlatcoord_;
  bool is_add_plus_;
  int zone_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 proj_zone_;
  double longitude_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API MdlExportRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.MdlExportRequest) */ {
 public:
  inline MdlExportRequest() : MdlExportRequest(nullptr) {}
  virtual ~MdlExportRequest();
  explicit constexpr MdlExportRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MdlExportRequest(const MdlExportRequest& from);
  MdlExportRequest(MdlExportRequest&& from) noexcept
    : MdlExportRequest() {
    *this = ::std::move(from);
  }

  inline MdlExportRequest& operator=(const MdlExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MdlExportRequest& operator=(MdlExportRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MdlExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MdlExportRequest* internal_default_instance() {
    return reinterpret_cast<const MdlExportRequest*>(
               &_MdlExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MdlExportRequest& a, MdlExportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MdlExportRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MdlExportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MdlExportRequest* New() const final {
    return CreateMaybeMessage<MdlExportRequest>(nullptr);
  }

  MdlExportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MdlExportRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MdlExportRequest& from);
  void MergeFrom(const MdlExportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MdlExportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.MdlExportRequest";
  }
  protected:
  explicit MdlExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPara3DtilesFieldNumber = 5,
    kModelDbIdFieldNumber = 1,
    kModelIdFieldNumber = 2,
    kTargetFormatFieldNumber = 3,
    kOverwriteFieldNumber = 4,
  };
  // .smart3dmap.v1.ParaOf3dtiles para_3dtiles = 5;
  bool has_para_3dtiles() const;
  private:
  bool _internal_has_para_3dtiles() const;
  public:
  void clear_para_3dtiles();
  const ::smart3dmap::v1::ParaOf3dtiles& para_3dtiles() const;
  ::smart3dmap::v1::ParaOf3dtiles* release_para_3dtiles();
  ::smart3dmap::v1::ParaOf3dtiles* mutable_para_3dtiles();
  void set_allocated_para_3dtiles(::smart3dmap::v1::ParaOf3dtiles* para_3dtiles);
  private:
  const ::smart3dmap::v1::ParaOf3dtiles& _internal_para_3dtiles() const;
  ::smart3dmap::v1::ParaOf3dtiles* _internal_mutable_para_3dtiles();
  public:
  void unsafe_arena_set_allocated_para_3dtiles(
      ::smart3dmap::v1::ParaOf3dtiles* para_3dtiles);
  ::smart3dmap::v1::ParaOf3dtiles* unsafe_arena_release_para_3dtiles();

  // int32 model_db_id = 1;
  void clear_model_db_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id() const;
  void set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_db_id() const;
  void _internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 model_id = 2;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .smart3dmap.v1.ModelFormat target_format = 3;
  void clear_target_format();
  ::smart3dmap::v1::ModelFormat target_format() const;
  void set_target_format(::smart3dmap::v1::ModelFormat value);
  private:
  ::smart3dmap::v1::ModelFormat _internal_target_format() const;
  void _internal_set_target_format(::smart3dmap::v1::ModelFormat value);
  public:

  // bool overwrite = 4;
  void clear_overwrite();
  bool overwrite() const;
  void set_overwrite(bool value);
  private:
  bool _internal_overwrite() const;
  void _internal_set_overwrite(bool value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.MdlExportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::smart3dmap::v1::ParaOf3dtiles* para_3dtiles_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_id_;
  int target_format_;
  bool overwrite_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API MdlExportReply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.MdlExportReply) */ {
 public:
  inline MdlExportReply() : MdlExportReply(nullptr) {}
  virtual ~MdlExportReply();
  explicit constexpr MdlExportReply(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MdlExportReply(const MdlExportReply& from);
  MdlExportReply(MdlExportReply&& from) noexcept
    : MdlExportReply() {
    *this = ::std::move(from);
  }

  inline MdlExportReply& operator=(const MdlExportReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline MdlExportReply& operator=(MdlExportReply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MdlExportReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const MdlExportReply* internal_default_instance() {
    return reinterpret_cast<const MdlExportReply*>(
               &_MdlExportReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MdlExportReply& a, MdlExportReply& b) {
    a.Swap(&b);
  }
  inline void Swap(MdlExportReply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MdlExportReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MdlExportReply* New() const final {
    return CreateMaybeMessage<MdlExportReply>(nullptr);
  }

  MdlExportReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MdlExportReply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MdlExportReply& from);
  void MergeFrom(const MdlExportReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MdlExportReply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.MdlExportReply";
  }
  protected:
  explicit MdlExportReply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelUrlFieldNumber = 1,
  };
  // string model_url = 1;
  void clear_model_url();
  const std::string& model_url() const;
  void set_model_url(const std::string& value);
  void set_model_url(std::string&& value);
  void set_model_url(const char* value);
  void set_model_url(const char* value, size_t size);
  std::string* mutable_model_url();
  std::string* release_model_url();
  void set_allocated_model_url(std::string* model_url);
  private:
  const std::string& _internal_model_url() const;
  void _internal_set_model_url(const std::string& value);
  std::string* _internal_mutable_model_url();
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.MdlExportReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API GetExportedModelURLRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.GetExportedModelURLRequest) */ {
 public:
  inline GetExportedModelURLRequest() : GetExportedModelURLRequest(nullptr) {}
  virtual ~GetExportedModelURLRequest();
  explicit constexpr GetExportedModelURLRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExportedModelURLRequest(const GetExportedModelURLRequest& from);
  GetExportedModelURLRequest(GetExportedModelURLRequest&& from) noexcept
    : GetExportedModelURLRequest() {
    *this = ::std::move(from);
  }

  inline GetExportedModelURLRequest& operator=(const GetExportedModelURLRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExportedModelURLRequest& operator=(GetExportedModelURLRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetExportedModelURLRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExportedModelURLRequest* internal_default_instance() {
    return reinterpret_cast<const GetExportedModelURLRequest*>(
               &_GetExportedModelURLRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetExportedModelURLRequest& a, GetExportedModelURLRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExportedModelURLRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExportedModelURLRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExportedModelURLRequest* New() const final {
    return CreateMaybeMessage<GetExportedModelURLRequest>(nullptr);
  }

  GetExportedModelURLRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExportedModelURLRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetExportedModelURLRequest& from);
  void MergeFrom(const GetExportedModelURLRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExportedModelURLRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.GetExportedModelURLRequest";
  }
  protected:
  explicit GetExportedModelURLRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelDbIdFieldNumber = 1,
    kModelIdFieldNumber = 2,
    kFormatFieldNumber = 3,
  };
  // int32 model_db_id = 1;
  void clear_model_db_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id() const;
  void set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_db_id() const;
  void _internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 model_id = 2;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .smart3dmap.v1.ModelFormat format = 3;
  void clear_format();
  ::smart3dmap::v1::ModelFormat format() const;
  void set_format(::smart3dmap::v1::ModelFormat value);
  private:
  ::smart3dmap::v1::ModelFormat _internal_format() const;
  void _internal_set_format(::smart3dmap::v1::ModelFormat value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.GetExportedModelURLRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_id_;
  int format_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API GetExportedModelURLResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.GetExportedModelURLResponse) */ {
 public:
  inline GetExportedModelURLResponse() : GetExportedModelURLResponse(nullptr) {}
  virtual ~GetExportedModelURLResponse();
  explicit constexpr GetExportedModelURLResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExportedModelURLResponse(const GetExportedModelURLResponse& from);
  GetExportedModelURLResponse(GetExportedModelURLResponse&& from) noexcept
    : GetExportedModelURLResponse() {
    *this = ::std::move(from);
  }

  inline GetExportedModelURLResponse& operator=(const GetExportedModelURLResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExportedModelURLResponse& operator=(GetExportedModelURLResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetExportedModelURLResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExportedModelURLResponse* internal_default_instance() {
    return reinterpret_cast<const GetExportedModelURLResponse*>(
               &_GetExportedModelURLResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetExportedModelURLResponse& a, GetExportedModelURLResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExportedModelURLResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExportedModelURLResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExportedModelURLResponse* New() const final {
    return CreateMaybeMessage<GetExportedModelURLResponse>(nullptr);
  }

  GetExportedModelURLResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExportedModelURLResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetExportedModelURLResponse& from);
  void MergeFrom(const GetExportedModelURLResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExportedModelURLResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.GetExportedModelURLResponse";
  }
  protected:
  explicit GetExportedModelURLResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelUrlFieldNumber = 1,
    kLegendUrlFieldNumber = 2,
  };
  // string model_url = 1;
  void clear_model_url();
  const std::string& model_url() const;
  void set_model_url(const std::string& value);
  void set_model_url(std::string&& value);
  void set_model_url(const char* value);
  void set_model_url(const char* value, size_t size);
  std::string* mutable_model_url();
  std::string* release_model_url();
  void set_allocated_model_url(std::string* model_url);
  private:
  const std::string& _internal_model_url() const;
  void _internal_set_model_url(const std::string& value);
  std::string* _internal_mutable_model_url();
  public:

  // string legend_url = 2;
  void clear_legend_url();
  const std::string& legend_url() const;
  void set_legend_url(const std::string& value);
  void set_legend_url(std::string&& value);
  void set_legend_url(const char* value);
  void set_legend_url(const char* value, size_t size);
  std::string* mutable_legend_url();
  std::string* release_legend_url();
  void set_allocated_legend_url(std::string* legend_url);
  private:
  const std::string& _internal_legend_url() const;
  void _internal_set_legend_url(const std::string& value);
  std::string* _internal_mutable_legend_url();
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.GetExportedModelURLResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr legend_url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API DeleteExportedModelRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.DeleteExportedModelRequest) */ {
 public:
  inline DeleteExportedModelRequest() : DeleteExportedModelRequest(nullptr) {}
  virtual ~DeleteExportedModelRequest();
  explicit constexpr DeleteExportedModelRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteExportedModelRequest(const DeleteExportedModelRequest& from);
  DeleteExportedModelRequest(DeleteExportedModelRequest&& from) noexcept
    : DeleteExportedModelRequest() {
    *this = ::std::move(from);
  }

  inline DeleteExportedModelRequest& operator=(const DeleteExportedModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteExportedModelRequest& operator=(DeleteExportedModelRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteExportedModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteExportedModelRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteExportedModelRequest*>(
               &_DeleteExportedModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DeleteExportedModelRequest& a, DeleteExportedModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteExportedModelRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteExportedModelRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteExportedModelRequest* New() const final {
    return CreateMaybeMessage<DeleteExportedModelRequest>(nullptr);
  }

  DeleteExportedModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteExportedModelRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteExportedModelRequest& from);
  void MergeFrom(const DeleteExportedModelRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteExportedModelRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.DeleteExportedModelRequest";
  }
  protected:
  explicit DeleteExportedModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelDbIdFieldNumber = 1,
    kModelIdFieldNumber = 2,
    kFormatFieldNumber = 3,
  };
  // int32 model_db_id = 1;
  void clear_model_db_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id() const;
  void set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_db_id() const;
  void _internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 model_id = 2;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .smart3dmap.v1.ModelFormat format = 3;
  void clear_format();
  ::smart3dmap::v1::ModelFormat format() const;
  void set_format(::smart3dmap::v1::ModelFormat value);
  private:
  ::smart3dmap::v1::ModelFormat _internal_format() const;
  void _internal_set_format(::smart3dmap::v1::ModelFormat value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.DeleteExportedModelRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_id_;
  int format_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API DeleteExportedModelResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.DeleteExportedModelResponse) */ {
 public:
  inline DeleteExportedModelResponse() : DeleteExportedModelResponse(nullptr) {}
  virtual ~DeleteExportedModelResponse();
  explicit constexpr DeleteExportedModelResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteExportedModelResponse(const DeleteExportedModelResponse& from);
  DeleteExportedModelResponse(DeleteExportedModelResponse&& from) noexcept
    : DeleteExportedModelResponse() {
    *this = ::std::move(from);
  }

  inline DeleteExportedModelResponse& operator=(const DeleteExportedModelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteExportedModelResponse& operator=(DeleteExportedModelResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteExportedModelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteExportedModelResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteExportedModelResponse*>(
               &_DeleteExportedModelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteExportedModelResponse& a, DeleteExportedModelResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteExportedModelResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteExportedModelResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteExportedModelResponse* New() const final {
    return CreateMaybeMessage<DeleteExportedModelResponse>(nullptr);
  }

  DeleteExportedModelResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteExportedModelResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteExportedModelResponse& from);
  void MergeFrom(const DeleteExportedModelResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteExportedModelResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.DeleteExportedModelResponse";
  }
  protected:
  explicit DeleteExportedModelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string error = 2;
  void clear_error();
  const std::string& error() const;
  void set_error(const std::string& value);
  void set_error(std::string&& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  std::string* mutable_error();
  std::string* release_error();
  void set_allocated_error(std::string* error);
  private:
  const std::string& _internal_error() const;
  void _internal_set_error(const std::string& value);
  std::string* _internal_mutable_error();
  public:

  // bool status = 1;
  void clear_status();
  bool status() const;
  void set_status(bool value);
  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.DeleteExportedModelResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_;
  bool status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API UploadExportedModelFileRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.UploadExportedModelFileRequest) */ {
 public:
  inline UploadExportedModelFileRequest() : UploadExportedModelFileRequest(nullptr) {}
  virtual ~UploadExportedModelFileRequest();
  explicit constexpr UploadExportedModelFileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UploadExportedModelFileRequest(const UploadExportedModelFileRequest& from);
  UploadExportedModelFileRequest(UploadExportedModelFileRequest&& from) noexcept
    : UploadExportedModelFileRequest() {
    *this = ::std::move(from);
  }

  inline UploadExportedModelFileRequest& operator=(const UploadExportedModelFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadExportedModelFileRequest& operator=(UploadExportedModelFileRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UploadExportedModelFileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadExportedModelFileRequest* internal_default_instance() {
    return reinterpret_cast<const UploadExportedModelFileRequest*>(
               &_UploadExportedModelFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(UploadExportedModelFileRequest& a, UploadExportedModelFileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UploadExportedModelFileRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadExportedModelFileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UploadExportedModelFileRequest* New() const final {
    return CreateMaybeMessage<UploadExportedModelFileRequest>(nullptr);
  }

  UploadExportedModelFileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UploadExportedModelFileRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UploadExportedModelFileRequest& from);
  void MergeFrom(const UploadExportedModelFileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadExportedModelFileRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.UploadExportedModelFileRequest";
  }
  protected:
  explicit UploadExportedModelFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRelativeFilePathNameFieldNumber = 4,
    kFileDataFieldNumber = 5,
    kModelDbIdFieldNumber = 1,
    kModelIdFieldNumber = 2,
    kFormatFieldNumber = 3,
    kIsDoneFieldNumber = 6,
  };
  // string relative_file_path_name = 4;
  void clear_relative_file_path_name();
  const std::string& relative_file_path_name() const;
  void set_relative_file_path_name(const std::string& value);
  void set_relative_file_path_name(std::string&& value);
  void set_relative_file_path_name(const char* value);
  void set_relative_file_path_name(const char* value, size_t size);
  std::string* mutable_relative_file_path_name();
  std::string* release_relative_file_path_name();
  void set_allocated_relative_file_path_name(std::string* relative_file_path_name);
  private:
  const std::string& _internal_relative_file_path_name() const;
  void _internal_set_relative_file_path_name(const std::string& value);
  std::string* _internal_mutable_relative_file_path_name();
  public:

  // bytes file_data = 5;
  void clear_file_data();
  const std::string& file_data() const;
  void set_file_data(const std::string& value);
  void set_file_data(std::string&& value);
  void set_file_data(const char* value);
  void set_file_data(const void* value, size_t size);
  std::string* mutable_file_data();
  std::string* release_file_data();
  void set_allocated_file_data(std::string* file_data);
  private:
  const std::string& _internal_file_data() const;
  void _internal_set_file_data(const std::string& value);
  std::string* _internal_mutable_file_data();
  public:

  // int32 model_db_id = 1;
  void clear_model_db_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id() const;
  void set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_db_id() const;
  void _internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 model_id = 2;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .smart3dmap.v1.ModelFormat format = 3;
  void clear_format();
  ::smart3dmap::v1::ModelFormat format() const;
  void set_format(::smart3dmap::v1::ModelFormat value);
  private:
  ::smart3dmap::v1::ModelFormat _internal_format() const;
  void _internal_set_format(::smart3dmap::v1::ModelFormat value);
  public:

  // bool is_done = 6;
  void clear_is_done();
  bool is_done() const;
  void set_is_done(bool value);
  private:
  bool _internal_is_done() const;
  void _internal_set_is_done(bool value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.UploadExportedModelFileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr relative_file_path_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_id_;
  int format_;
  bool is_done_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API UploadExportedModelFileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.UploadExportedModelFileResponse) */ {
 public:
  inline UploadExportedModelFileResponse() : UploadExportedModelFileResponse(nullptr) {}
  virtual ~UploadExportedModelFileResponse();
  explicit constexpr UploadExportedModelFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UploadExportedModelFileResponse(const UploadExportedModelFileResponse& from);
  UploadExportedModelFileResponse(UploadExportedModelFileResponse&& from) noexcept
    : UploadExportedModelFileResponse() {
    *this = ::std::move(from);
  }

  inline UploadExportedModelFileResponse& operator=(const UploadExportedModelFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadExportedModelFileResponse& operator=(UploadExportedModelFileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UploadExportedModelFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadExportedModelFileResponse* internal_default_instance() {
    return reinterpret_cast<const UploadExportedModelFileResponse*>(
               &_UploadExportedModelFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(UploadExportedModelFileResponse& a, UploadExportedModelFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UploadExportedModelFileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadExportedModelFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UploadExportedModelFileResponse* New() const final {
    return CreateMaybeMessage<UploadExportedModelFileResponse>(nullptr);
  }

  UploadExportedModelFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UploadExportedModelFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UploadExportedModelFileResponse& from);
  void MergeFrom(const UploadExportedModelFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadExportedModelFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.UploadExportedModelFileResponse";
  }
  protected:
  explicit UploadExportedModelFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string error = 2;
  void clear_error();
  const std::string& error() const;
  void set_error(const std::string& value);
  void set_error(std::string&& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  std::string* mutable_error();
  std::string* release_error();
  void set_allocated_error(std::string* error);
  private:
  const std::string& _internal_error() const;
  void _internal_set_error(const std::string& value);
  std::string* _internal_mutable_error();
  public:

  // bool status = 1;
  void clear_status();
  bool status() const;
  void set_status(bool value);
  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.UploadExportedModelFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_;
  bool status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API UploadModelLegendPictureRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.UploadModelLegendPictureRequest) */ {
 public:
  inline UploadModelLegendPictureRequest() : UploadModelLegendPictureRequest(nullptr) {}
  virtual ~UploadModelLegendPictureRequest();
  explicit constexpr UploadModelLegendPictureRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UploadModelLegendPictureRequest(const UploadModelLegendPictureRequest& from);
  UploadModelLegendPictureRequest(UploadModelLegendPictureRequest&& from) noexcept
    : UploadModelLegendPictureRequest() {
    *this = ::std::move(from);
  }

  inline UploadModelLegendPictureRequest& operator=(const UploadModelLegendPictureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadModelLegendPictureRequest& operator=(UploadModelLegendPictureRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UploadModelLegendPictureRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadModelLegendPictureRequest* internal_default_instance() {
    return reinterpret_cast<const UploadModelLegendPictureRequest*>(
               &_UploadModelLegendPictureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(UploadModelLegendPictureRequest& a, UploadModelLegendPictureRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UploadModelLegendPictureRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadModelLegendPictureRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UploadModelLegendPictureRequest* New() const final {
    return CreateMaybeMessage<UploadModelLegendPictureRequest>(nullptr);
  }

  UploadModelLegendPictureRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UploadModelLegendPictureRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UploadModelLegendPictureRequest& from);
  void MergeFrom(const UploadModelLegendPictureRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadModelLegendPictureRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.UploadModelLegendPictureRequest";
  }
  protected:
  explicit UploadModelLegendPictureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPicDataFieldNumber = 3,
    kModelDbIdFieldNumber = 1,
    kModelIdFieldNumber = 2,
  };
  // bytes pic_data = 3;
  void clear_pic_data();
  const std::string& pic_data() const;
  void set_pic_data(const std::string& value);
  void set_pic_data(std::string&& value);
  void set_pic_data(const char* value);
  void set_pic_data(const void* value, size_t size);
  std::string* mutable_pic_data();
  std::string* release_pic_data();
  void set_allocated_pic_data(std::string* pic_data);
  private:
  const std::string& _internal_pic_data() const;
  void _internal_set_pic_data(const std::string& value);
  std::string* _internal_mutable_pic_data();
  public:

  // int32 model_db_id = 1;
  void clear_model_db_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id() const;
  void set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_db_id() const;
  void _internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 model_id = 2;
  void clear_model_id();
  ::PROTOBUF_NAMESPACE_ID::int32 model_id() const;
  void set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_model_id() const;
  void _internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.UploadModelLegendPictureRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pic_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_db_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 model_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// -------------------------------------------------------------------

class LIBS3DMGRPC_API UploadModelLegendPictureResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:smart3dmap.v1.UploadModelLegendPictureResponse) */ {
 public:
  inline UploadModelLegendPictureResponse() : UploadModelLegendPictureResponse(nullptr) {}
  virtual ~UploadModelLegendPictureResponse();
  explicit constexpr UploadModelLegendPictureResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UploadModelLegendPictureResponse(const UploadModelLegendPictureResponse& from);
  UploadModelLegendPictureResponse(UploadModelLegendPictureResponse&& from) noexcept
    : UploadModelLegendPictureResponse() {
    *this = ::std::move(from);
  }

  inline UploadModelLegendPictureResponse& operator=(const UploadModelLegendPictureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UploadModelLegendPictureResponse& operator=(UploadModelLegendPictureResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UploadModelLegendPictureResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UploadModelLegendPictureResponse* internal_default_instance() {
    return reinterpret_cast<const UploadModelLegendPictureResponse*>(
               &_UploadModelLegendPictureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(UploadModelLegendPictureResponse& a, UploadModelLegendPictureResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UploadModelLegendPictureResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UploadModelLegendPictureResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UploadModelLegendPictureResponse* New() const final {
    return CreateMaybeMessage<UploadModelLegendPictureResponse>(nullptr);
  }

  UploadModelLegendPictureResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UploadModelLegendPictureResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UploadModelLegendPictureResponse& from);
  void MergeFrom(const UploadModelLegendPictureResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UploadModelLegendPictureResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "smart3dmap.v1.UploadModelLegendPictureResponse";
  }
  protected:
  explicit UploadModelLegendPictureResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_model_5fexporter_2fmodel_5fexporter_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLegendUrlFieldNumber = 1,
  };
  // string legend_url = 1;
  void clear_legend_url();
  const std::string& legend_url() const;
  void set_legend_url(const std::string& value);
  void set_legend_url(std::string&& value);
  void set_legend_url(const char* value);
  void set_legend_url(const char* value, size_t size);
  std::string* mutable_legend_url();
  std::string* release_legend_url();
  void set_allocated_legend_url(std::string* legend_url);
  private:
  const std::string& _internal_legend_url() const;
  void _internal_set_legend_url(const std::string& value);
  std::string* _internal_mutable_legend_url();
  public:

  // @@protoc_insertion_point(class_scope:smart3dmap.v1.UploadModelLegendPictureResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr legend_url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_5fexporter_2fmodel_5fexporter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParaOf3dtiles

// int32 boreholenum_of_binaryfile = 1;
inline void ParaOf3dtiles::clear_boreholenum_of_binaryfile() {
  boreholenum_of_binaryfile_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ParaOf3dtiles::_internal_boreholenum_of_binaryfile() const {
  return boreholenum_of_binaryfile_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ParaOf3dtiles::boreholenum_of_binaryfile() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.ParaOf3dtiles.boreholenum_of_binaryfile)
  return _internal_boreholenum_of_binaryfile();
}
inline void ParaOf3dtiles::_internal_set_boreholenum_of_binaryfile(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  boreholenum_of_binaryfile_ = value;
}
inline void ParaOf3dtiles::set_boreholenum_of_binaryfile(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_boreholenum_of_binaryfile(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.ParaOf3dtiles.boreholenum_of_binaryfile)
}

// bool is_trans_lonlatcoord = 2;
inline void ParaOf3dtiles::clear_is_trans_lonlatcoord() {
  is_trans_lonlatcoord_ = false;
}
inline bool ParaOf3dtiles::_internal_is_trans_lonlatcoord() const {
  return is_trans_lonlatcoord_;
}
inline bool ParaOf3dtiles::is_trans_lonlatcoord() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.ParaOf3dtiles.is_trans_lonlatcoord)
  return _internal_is_trans_lonlatcoord();
}
inline void ParaOf3dtiles::_internal_set_is_trans_lonlatcoord(bool value) {
  
  is_trans_lonlatcoord_ = value;
}
inline void ParaOf3dtiles::set_is_trans_lonlatcoord(bool value) {
  _internal_set_is_trans_lonlatcoord(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.ParaOf3dtiles.is_trans_lonlatcoord)
}

// bool is_add_plus = 3;
inline void ParaOf3dtiles::clear_is_add_plus() {
  is_add_plus_ = false;
}
inline bool ParaOf3dtiles::_internal_is_add_plus() const {
  return is_add_plus_;
}
inline bool ParaOf3dtiles::is_add_plus() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.ParaOf3dtiles.is_add_plus)
  return _internal_is_add_plus();
}
inline void ParaOf3dtiles::_internal_set_is_add_plus(bool value) {
  
  is_add_plus_ = value;
}
inline void ParaOf3dtiles::set_is_add_plus(bool value) {
  _internal_set_is_add_plus(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.ParaOf3dtiles.is_add_plus)
}

// .smart3dmap.v1.ZoneType zone_type = 4;
inline void ParaOf3dtiles::clear_zone_type() {
  zone_type_ = 0;
}
inline ::smart3dmap::v1::ZoneType ParaOf3dtiles::_internal_zone_type() const {
  return static_cast< ::smart3dmap::v1::ZoneType >(zone_type_);
}
inline ::smart3dmap::v1::ZoneType ParaOf3dtiles::zone_type() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.ParaOf3dtiles.zone_type)
  return _internal_zone_type();
}
inline void ParaOf3dtiles::_internal_set_zone_type(::smart3dmap::v1::ZoneType value) {
  
  zone_type_ = value;
}
inline void ParaOf3dtiles::set_zone_type(::smart3dmap::v1::ZoneType value) {
  _internal_set_zone_type(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.ParaOf3dtiles.zone_type)
}

// int32 proj_zone = 5;
inline void ParaOf3dtiles::clear_proj_zone() {
  proj_zone_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ParaOf3dtiles::_internal_proj_zone() const {
  return proj_zone_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ParaOf3dtiles::proj_zone() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.ParaOf3dtiles.proj_zone)
  return _internal_proj_zone();
}
inline void ParaOf3dtiles::_internal_set_proj_zone(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  proj_zone_ = value;
}
inline void ParaOf3dtiles::set_proj_zone(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_proj_zone(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.ParaOf3dtiles.proj_zone)
}

// double longitude = 6;
inline void ParaOf3dtiles::clear_longitude() {
  longitude_ = 0;
}
inline double ParaOf3dtiles::_internal_longitude() const {
  return longitude_;
}
inline double ParaOf3dtiles::longitude() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.ParaOf3dtiles.longitude)
  return _internal_longitude();
}
inline void ParaOf3dtiles::_internal_set_longitude(double value) {
  
  longitude_ = value;
}
inline void ParaOf3dtiles::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.ParaOf3dtiles.longitude)
}

// -------------------------------------------------------------------

// MdlExportRequest

// int32 model_db_id = 1;
inline void MdlExportRequest::clear_model_db_id() {
  model_db_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MdlExportRequest::_internal_model_db_id() const {
  return model_db_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MdlExportRequest::model_db_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.MdlExportRequest.model_db_id)
  return _internal_model_db_id();
}
inline void MdlExportRequest::_internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_db_id_ = value;
}
inline void MdlExportRequest::set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_db_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.MdlExportRequest.model_db_id)
}

// int32 model_id = 2;
inline void MdlExportRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MdlExportRequest::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MdlExportRequest::model_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.MdlExportRequest.model_id)
  return _internal_model_id();
}
inline void MdlExportRequest::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_id_ = value;
}
inline void MdlExportRequest::set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.MdlExportRequest.model_id)
}

// .smart3dmap.v1.ModelFormat target_format = 3;
inline void MdlExportRequest::clear_target_format() {
  target_format_ = 0;
}
inline ::smart3dmap::v1::ModelFormat MdlExportRequest::_internal_target_format() const {
  return static_cast< ::smart3dmap::v1::ModelFormat >(target_format_);
}
inline ::smart3dmap::v1::ModelFormat MdlExportRequest::target_format() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.MdlExportRequest.target_format)
  return _internal_target_format();
}
inline void MdlExportRequest::_internal_set_target_format(::smart3dmap::v1::ModelFormat value) {
  
  target_format_ = value;
}
inline void MdlExportRequest::set_target_format(::smart3dmap::v1::ModelFormat value) {
  _internal_set_target_format(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.MdlExportRequest.target_format)
}

// bool overwrite = 4;
inline void MdlExportRequest::clear_overwrite() {
  overwrite_ = false;
}
inline bool MdlExportRequest::_internal_overwrite() const {
  return overwrite_;
}
inline bool MdlExportRequest::overwrite() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.MdlExportRequest.overwrite)
  return _internal_overwrite();
}
inline void MdlExportRequest::_internal_set_overwrite(bool value) {
  
  overwrite_ = value;
}
inline void MdlExportRequest::set_overwrite(bool value) {
  _internal_set_overwrite(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.MdlExportRequest.overwrite)
}

// .smart3dmap.v1.ParaOf3dtiles para_3dtiles = 5;
inline bool MdlExportRequest::_internal_has_para_3dtiles() const {
  return this != internal_default_instance() && para_3dtiles_ != nullptr;
}
inline bool MdlExportRequest::has_para_3dtiles() const {
  return _internal_has_para_3dtiles();
}
inline void MdlExportRequest::clear_para_3dtiles() {
  if (GetArena() == nullptr && para_3dtiles_ != nullptr) {
    delete para_3dtiles_;
  }
  para_3dtiles_ = nullptr;
}
inline const ::smart3dmap::v1::ParaOf3dtiles& MdlExportRequest::_internal_para_3dtiles() const {
  const ::smart3dmap::v1::ParaOf3dtiles* p = para_3dtiles_;
  return p != nullptr ? *p : reinterpret_cast<const ::smart3dmap::v1::ParaOf3dtiles&>(
      ::smart3dmap::v1::_ParaOf3dtiles_default_instance_);
}
inline const ::smart3dmap::v1::ParaOf3dtiles& MdlExportRequest::para_3dtiles() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.MdlExportRequest.para_3dtiles)
  return _internal_para_3dtiles();
}
inline void MdlExportRequest::unsafe_arena_set_allocated_para_3dtiles(
    ::smart3dmap::v1::ParaOf3dtiles* para_3dtiles) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(para_3dtiles_);
  }
  para_3dtiles_ = para_3dtiles;
  if (para_3dtiles) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:smart3dmap.v1.MdlExportRequest.para_3dtiles)
}
inline ::smart3dmap::v1::ParaOf3dtiles* MdlExportRequest::release_para_3dtiles() {
  
  ::smart3dmap::v1::ParaOf3dtiles* temp = para_3dtiles_;
  para_3dtiles_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::smart3dmap::v1::ParaOf3dtiles* MdlExportRequest::unsafe_arena_release_para_3dtiles() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.MdlExportRequest.para_3dtiles)
  
  ::smart3dmap::v1::ParaOf3dtiles* temp = para_3dtiles_;
  para_3dtiles_ = nullptr;
  return temp;
}
inline ::smart3dmap::v1::ParaOf3dtiles* MdlExportRequest::_internal_mutable_para_3dtiles() {
  
  if (para_3dtiles_ == nullptr) {
    auto* p = CreateMaybeMessage<::smart3dmap::v1::ParaOf3dtiles>(GetArena());
    para_3dtiles_ = p;
  }
  return para_3dtiles_;
}
inline ::smart3dmap::v1::ParaOf3dtiles* MdlExportRequest::mutable_para_3dtiles() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.MdlExportRequest.para_3dtiles)
  return _internal_mutable_para_3dtiles();
}
inline void MdlExportRequest::set_allocated_para_3dtiles(::smart3dmap::v1::ParaOf3dtiles* para_3dtiles) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete para_3dtiles_;
  }
  if (para_3dtiles) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(para_3dtiles);
    if (message_arena != submessage_arena) {
      para_3dtiles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, para_3dtiles, submessage_arena);
    }
    
  } else {
    
  }
  para_3dtiles_ = para_3dtiles;
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.MdlExportRequest.para_3dtiles)
}

// -------------------------------------------------------------------

// MdlExportReply

// string model_url = 1;
inline void MdlExportReply::clear_model_url() {
  model_url_.ClearToEmpty();
}
inline const std::string& MdlExportReply::model_url() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.MdlExportReply.model_url)
  return _internal_model_url();
}
inline void MdlExportReply::set_model_url(const std::string& value) {
  _internal_set_model_url(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.MdlExportReply.model_url)
}
inline std::string* MdlExportReply::mutable_model_url() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.MdlExportReply.model_url)
  return _internal_mutable_model_url();
}
inline const std::string& MdlExportReply::_internal_model_url() const {
  return model_url_.Get();
}
inline void MdlExportReply::_internal_set_model_url(const std::string& value) {
  
  model_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MdlExportReply::set_model_url(std::string&& value) {
  
  model_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.MdlExportReply.model_url)
}
inline void MdlExportReply::set_model_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  model_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.MdlExportReply.model_url)
}
inline void MdlExportReply::set_model_url(const char* value,
    size_t size) {
  
  model_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.MdlExportReply.model_url)
}
inline std::string* MdlExportReply::_internal_mutable_model_url() {
  
  return model_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MdlExportReply::release_model_url() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.MdlExportReply.model_url)
  return model_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MdlExportReply::set_allocated_model_url(std::string* model_url) {
  if (model_url != nullptr) {
    
  } else {
    
  }
  model_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.MdlExportReply.model_url)
}

// -------------------------------------------------------------------

// GetExportedModelURLRequest

// int32 model_db_id = 1;
inline void GetExportedModelURLRequest::clear_model_db_id() {
  model_db_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetExportedModelURLRequest::_internal_model_db_id() const {
  return model_db_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetExportedModelURLRequest::model_db_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.GetExportedModelURLRequest.model_db_id)
  return _internal_model_db_id();
}
inline void GetExportedModelURLRequest::_internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_db_id_ = value;
}
inline void GetExportedModelURLRequest::set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_db_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.GetExportedModelURLRequest.model_db_id)
}

// int32 model_id = 2;
inline void GetExportedModelURLRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetExportedModelURLRequest::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetExportedModelURLRequest::model_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.GetExportedModelURLRequest.model_id)
  return _internal_model_id();
}
inline void GetExportedModelURLRequest::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_id_ = value;
}
inline void GetExportedModelURLRequest::set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.GetExportedModelURLRequest.model_id)
}

// .smart3dmap.v1.ModelFormat format = 3;
inline void GetExportedModelURLRequest::clear_format() {
  format_ = 0;
}
inline ::smart3dmap::v1::ModelFormat GetExportedModelURLRequest::_internal_format() const {
  return static_cast< ::smart3dmap::v1::ModelFormat >(format_);
}
inline ::smart3dmap::v1::ModelFormat GetExportedModelURLRequest::format() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.GetExportedModelURLRequest.format)
  return _internal_format();
}
inline void GetExportedModelURLRequest::_internal_set_format(::smart3dmap::v1::ModelFormat value) {
  
  format_ = value;
}
inline void GetExportedModelURLRequest::set_format(::smart3dmap::v1::ModelFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.GetExportedModelURLRequest.format)
}

// -------------------------------------------------------------------

// GetExportedModelURLResponse

// string model_url = 1;
inline void GetExportedModelURLResponse::clear_model_url() {
  model_url_.ClearToEmpty();
}
inline const std::string& GetExportedModelURLResponse::model_url() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.GetExportedModelURLResponse.model_url)
  return _internal_model_url();
}
inline void GetExportedModelURLResponse::set_model_url(const std::string& value) {
  _internal_set_model_url(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.GetExportedModelURLResponse.model_url)
}
inline std::string* GetExportedModelURLResponse::mutable_model_url() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.GetExportedModelURLResponse.model_url)
  return _internal_mutable_model_url();
}
inline const std::string& GetExportedModelURLResponse::_internal_model_url() const {
  return model_url_.Get();
}
inline void GetExportedModelURLResponse::_internal_set_model_url(const std::string& value) {
  
  model_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetExportedModelURLResponse::set_model_url(std::string&& value) {
  
  model_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.GetExportedModelURLResponse.model_url)
}
inline void GetExportedModelURLResponse::set_model_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  model_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.GetExportedModelURLResponse.model_url)
}
inline void GetExportedModelURLResponse::set_model_url(const char* value,
    size_t size) {
  
  model_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.GetExportedModelURLResponse.model_url)
}
inline std::string* GetExportedModelURLResponse::_internal_mutable_model_url() {
  
  return model_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetExportedModelURLResponse::release_model_url() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.GetExportedModelURLResponse.model_url)
  return model_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetExportedModelURLResponse::set_allocated_model_url(std::string* model_url) {
  if (model_url != nullptr) {
    
  } else {
    
  }
  model_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.GetExportedModelURLResponse.model_url)
}

// string legend_url = 2;
inline void GetExportedModelURLResponse::clear_legend_url() {
  legend_url_.ClearToEmpty();
}
inline const std::string& GetExportedModelURLResponse::legend_url() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
  return _internal_legend_url();
}
inline void GetExportedModelURLResponse::set_legend_url(const std::string& value) {
  _internal_set_legend_url(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
}
inline std::string* GetExportedModelURLResponse::mutable_legend_url() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
  return _internal_mutable_legend_url();
}
inline const std::string& GetExportedModelURLResponse::_internal_legend_url() const {
  return legend_url_.Get();
}
inline void GetExportedModelURLResponse::_internal_set_legend_url(const std::string& value) {
  
  legend_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetExportedModelURLResponse::set_legend_url(std::string&& value) {
  
  legend_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
}
inline void GetExportedModelURLResponse::set_legend_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  legend_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
}
inline void GetExportedModelURLResponse::set_legend_url(const char* value,
    size_t size) {
  
  legend_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
}
inline std::string* GetExportedModelURLResponse::_internal_mutable_legend_url() {
  
  return legend_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetExportedModelURLResponse::release_legend_url() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
  return legend_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetExportedModelURLResponse::set_allocated_legend_url(std::string* legend_url) {
  if (legend_url != nullptr) {
    
  } else {
    
  }
  legend_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), legend_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.GetExportedModelURLResponse.legend_url)
}

// -------------------------------------------------------------------

// DeleteExportedModelRequest

// int32 model_db_id = 1;
inline void DeleteExportedModelRequest::clear_model_db_id() {
  model_db_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DeleteExportedModelRequest::_internal_model_db_id() const {
  return model_db_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DeleteExportedModelRequest::model_db_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.DeleteExportedModelRequest.model_db_id)
  return _internal_model_db_id();
}
inline void DeleteExportedModelRequest::_internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_db_id_ = value;
}
inline void DeleteExportedModelRequest::set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_db_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.DeleteExportedModelRequest.model_db_id)
}

// int32 model_id = 2;
inline void DeleteExportedModelRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DeleteExportedModelRequest::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DeleteExportedModelRequest::model_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.DeleteExportedModelRequest.model_id)
  return _internal_model_id();
}
inline void DeleteExportedModelRequest::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_id_ = value;
}
inline void DeleteExportedModelRequest::set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.DeleteExportedModelRequest.model_id)
}

// .smart3dmap.v1.ModelFormat format = 3;
inline void DeleteExportedModelRequest::clear_format() {
  format_ = 0;
}
inline ::smart3dmap::v1::ModelFormat DeleteExportedModelRequest::_internal_format() const {
  return static_cast< ::smart3dmap::v1::ModelFormat >(format_);
}
inline ::smart3dmap::v1::ModelFormat DeleteExportedModelRequest::format() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.DeleteExportedModelRequest.format)
  return _internal_format();
}
inline void DeleteExportedModelRequest::_internal_set_format(::smart3dmap::v1::ModelFormat value) {
  
  format_ = value;
}
inline void DeleteExportedModelRequest::set_format(::smart3dmap::v1::ModelFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.DeleteExportedModelRequest.format)
}

// -------------------------------------------------------------------

// DeleteExportedModelResponse

// bool status = 1;
inline void DeleteExportedModelResponse::clear_status() {
  status_ = false;
}
inline bool DeleteExportedModelResponse::_internal_status() const {
  return status_;
}
inline bool DeleteExportedModelResponse::status() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.DeleteExportedModelResponse.status)
  return _internal_status();
}
inline void DeleteExportedModelResponse::_internal_set_status(bool value) {
  
  status_ = value;
}
inline void DeleteExportedModelResponse::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.DeleteExportedModelResponse.status)
}

// string error = 2;
inline void DeleteExportedModelResponse::clear_error() {
  error_.ClearToEmpty();
}
inline const std::string& DeleteExportedModelResponse::error() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.DeleteExportedModelResponse.error)
  return _internal_error();
}
inline void DeleteExportedModelResponse::set_error(const std::string& value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.DeleteExportedModelResponse.error)
}
inline std::string* DeleteExportedModelResponse::mutable_error() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.DeleteExportedModelResponse.error)
  return _internal_mutable_error();
}
inline const std::string& DeleteExportedModelResponse::_internal_error() const {
  return error_.Get();
}
inline void DeleteExportedModelResponse::_internal_set_error(const std::string& value) {
  
  error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteExportedModelResponse::set_error(std::string&& value) {
  
  error_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.DeleteExportedModelResponse.error)
}
inline void DeleteExportedModelResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.DeleteExportedModelResponse.error)
}
inline void DeleteExportedModelResponse::set_error(const char* value,
    size_t size) {
  
  error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.DeleteExportedModelResponse.error)
}
inline std::string* DeleteExportedModelResponse::_internal_mutable_error() {
  
  return error_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteExportedModelResponse::release_error() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.DeleteExportedModelResponse.error)
  return error_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteExportedModelResponse::set_allocated_error(std::string* error) {
  if (error != nullptr) {
    
  } else {
    
  }
  error_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.DeleteExportedModelResponse.error)
}

// -------------------------------------------------------------------

// UploadExportedModelFileRequest

// int32 model_db_id = 1;
inline void UploadExportedModelFileRequest::clear_model_db_id() {
  model_db_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadExportedModelFileRequest::_internal_model_db_id() const {
  return model_db_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadExportedModelFileRequest::model_db_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileRequest.model_db_id)
  return _internal_model_db_id();
}
inline void UploadExportedModelFileRequest::_internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_db_id_ = value;
}
inline void UploadExportedModelFileRequest::set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_db_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileRequest.model_db_id)
}

// int32 model_id = 2;
inline void UploadExportedModelFileRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadExportedModelFileRequest::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadExportedModelFileRequest::model_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileRequest.model_id)
  return _internal_model_id();
}
inline void UploadExportedModelFileRequest::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_id_ = value;
}
inline void UploadExportedModelFileRequest::set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileRequest.model_id)
}

// .smart3dmap.v1.ModelFormat format = 3;
inline void UploadExportedModelFileRequest::clear_format() {
  format_ = 0;
}
inline ::smart3dmap::v1::ModelFormat UploadExportedModelFileRequest::_internal_format() const {
  return static_cast< ::smart3dmap::v1::ModelFormat >(format_);
}
inline ::smart3dmap::v1::ModelFormat UploadExportedModelFileRequest::format() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileRequest.format)
  return _internal_format();
}
inline void UploadExportedModelFileRequest::_internal_set_format(::smart3dmap::v1::ModelFormat value) {
  
  format_ = value;
}
inline void UploadExportedModelFileRequest::set_format(::smart3dmap::v1::ModelFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileRequest.format)
}

// string relative_file_path_name = 4;
inline void UploadExportedModelFileRequest::clear_relative_file_path_name() {
  relative_file_path_name_.ClearToEmpty();
}
inline const std::string& UploadExportedModelFileRequest::relative_file_path_name() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
  return _internal_relative_file_path_name();
}
inline void UploadExportedModelFileRequest::set_relative_file_path_name(const std::string& value) {
  _internal_set_relative_file_path_name(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
}
inline std::string* UploadExportedModelFileRequest::mutable_relative_file_path_name() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
  return _internal_mutable_relative_file_path_name();
}
inline const std::string& UploadExportedModelFileRequest::_internal_relative_file_path_name() const {
  return relative_file_path_name_.Get();
}
inline void UploadExportedModelFileRequest::_internal_set_relative_file_path_name(const std::string& value) {
  
  relative_file_path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UploadExportedModelFileRequest::set_relative_file_path_name(std::string&& value) {
  
  relative_file_path_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
}
inline void UploadExportedModelFileRequest::set_relative_file_path_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  relative_file_path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
}
inline void UploadExportedModelFileRequest::set_relative_file_path_name(const char* value,
    size_t size) {
  
  relative_file_path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
}
inline std::string* UploadExportedModelFileRequest::_internal_mutable_relative_file_path_name() {
  
  return relative_file_path_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UploadExportedModelFileRequest::release_relative_file_path_name() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
  return relative_file_path_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UploadExportedModelFileRequest::set_allocated_relative_file_path_name(std::string* relative_file_path_name) {
  if (relative_file_path_name != nullptr) {
    
  } else {
    
  }
  relative_file_path_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), relative_file_path_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.UploadExportedModelFileRequest.relative_file_path_name)
}

// bytes file_data = 5;
inline void UploadExportedModelFileRequest::clear_file_data() {
  file_data_.ClearToEmpty();
}
inline const std::string& UploadExportedModelFileRequest::file_data() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
  return _internal_file_data();
}
inline void UploadExportedModelFileRequest::set_file_data(const std::string& value) {
  _internal_set_file_data(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
}
inline std::string* UploadExportedModelFileRequest::mutable_file_data() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
  return _internal_mutable_file_data();
}
inline const std::string& UploadExportedModelFileRequest::_internal_file_data() const {
  return file_data_.Get();
}
inline void UploadExportedModelFileRequest::_internal_set_file_data(const std::string& value) {
  
  file_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UploadExportedModelFileRequest::set_file_data(std::string&& value) {
  
  file_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
}
inline void UploadExportedModelFileRequest::set_file_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
}
inline void UploadExportedModelFileRequest::set_file_data(const void* value,
    size_t size) {
  
  file_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
}
inline std::string* UploadExportedModelFileRequest::_internal_mutable_file_data() {
  
  return file_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UploadExportedModelFileRequest::release_file_data() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
  return file_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UploadExportedModelFileRequest::set_allocated_file_data(std::string* file_data) {
  if (file_data != nullptr) {
    
  } else {
    
  }
  file_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.UploadExportedModelFileRequest.file_data)
}

// bool is_done = 6;
inline void UploadExportedModelFileRequest::clear_is_done() {
  is_done_ = false;
}
inline bool UploadExportedModelFileRequest::_internal_is_done() const {
  return is_done_;
}
inline bool UploadExportedModelFileRequest::is_done() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileRequest.is_done)
  return _internal_is_done();
}
inline void UploadExportedModelFileRequest::_internal_set_is_done(bool value) {
  
  is_done_ = value;
}
inline void UploadExportedModelFileRequest::set_is_done(bool value) {
  _internal_set_is_done(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileRequest.is_done)
}

// -------------------------------------------------------------------

// UploadExportedModelFileResponse

// bool status = 1;
inline void UploadExportedModelFileResponse::clear_status() {
  status_ = false;
}
inline bool UploadExportedModelFileResponse::_internal_status() const {
  return status_;
}
inline bool UploadExportedModelFileResponse::status() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileResponse.status)
  return _internal_status();
}
inline void UploadExportedModelFileResponse::_internal_set_status(bool value) {
  
  status_ = value;
}
inline void UploadExportedModelFileResponse::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileResponse.status)
}

// string error = 2;
inline void UploadExportedModelFileResponse::clear_error() {
  error_.ClearToEmpty();
}
inline const std::string& UploadExportedModelFileResponse::error() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadExportedModelFileResponse.error)
  return _internal_error();
}
inline void UploadExportedModelFileResponse::set_error(const std::string& value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadExportedModelFileResponse.error)
}
inline std::string* UploadExportedModelFileResponse::mutable_error() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.UploadExportedModelFileResponse.error)
  return _internal_mutable_error();
}
inline const std::string& UploadExportedModelFileResponse::_internal_error() const {
  return error_.Get();
}
inline void UploadExportedModelFileResponse::_internal_set_error(const std::string& value) {
  
  error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UploadExportedModelFileResponse::set_error(std::string&& value) {
  
  error_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.UploadExportedModelFileResponse.error)
}
inline void UploadExportedModelFileResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.UploadExportedModelFileResponse.error)
}
inline void UploadExportedModelFileResponse::set_error(const char* value,
    size_t size) {
  
  error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.UploadExportedModelFileResponse.error)
}
inline std::string* UploadExportedModelFileResponse::_internal_mutable_error() {
  
  return error_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UploadExportedModelFileResponse::release_error() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.UploadExportedModelFileResponse.error)
  return error_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UploadExportedModelFileResponse::set_allocated_error(std::string* error) {
  if (error != nullptr) {
    
  } else {
    
  }
  error_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.UploadExportedModelFileResponse.error)
}

// -------------------------------------------------------------------

// UploadModelLegendPictureRequest

// int32 model_db_id = 1;
inline void UploadModelLegendPictureRequest::clear_model_db_id() {
  model_db_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadModelLegendPictureRequest::_internal_model_db_id() const {
  return model_db_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadModelLegendPictureRequest::model_db_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadModelLegendPictureRequest.model_db_id)
  return _internal_model_db_id();
}
inline void UploadModelLegendPictureRequest::_internal_set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_db_id_ = value;
}
inline void UploadModelLegendPictureRequest::set_model_db_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_db_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadModelLegendPictureRequest.model_db_id)
}

// int32 model_id = 2;
inline void UploadModelLegendPictureRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadModelLegendPictureRequest::_internal_model_id() const {
  return model_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UploadModelLegendPictureRequest::model_id() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadModelLegendPictureRequest.model_id)
  return _internal_model_id();
}
inline void UploadModelLegendPictureRequest::_internal_set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  model_id_ = value;
}
inline void UploadModelLegendPictureRequest::set_model_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_model_id(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadModelLegendPictureRequest.model_id)
}

// bytes pic_data = 3;
inline void UploadModelLegendPictureRequest::clear_pic_data() {
  pic_data_.ClearToEmpty();
}
inline const std::string& UploadModelLegendPictureRequest::pic_data() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
  return _internal_pic_data();
}
inline void UploadModelLegendPictureRequest::set_pic_data(const std::string& value) {
  _internal_set_pic_data(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
}
inline std::string* UploadModelLegendPictureRequest::mutable_pic_data() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
  return _internal_mutable_pic_data();
}
inline const std::string& UploadModelLegendPictureRequest::_internal_pic_data() const {
  return pic_data_.Get();
}
inline void UploadModelLegendPictureRequest::_internal_set_pic_data(const std::string& value) {
  
  pic_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UploadModelLegendPictureRequest::set_pic_data(std::string&& value) {
  
  pic_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
}
inline void UploadModelLegendPictureRequest::set_pic_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pic_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
}
inline void UploadModelLegendPictureRequest::set_pic_data(const void* value,
    size_t size) {
  
  pic_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
}
inline std::string* UploadModelLegendPictureRequest::_internal_mutable_pic_data() {
  
  return pic_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UploadModelLegendPictureRequest::release_pic_data() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
  return pic_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UploadModelLegendPictureRequest::set_allocated_pic_data(std::string* pic_data) {
  if (pic_data != nullptr) {
    
  } else {
    
  }
  pic_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pic_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.UploadModelLegendPictureRequest.pic_data)
}

// -------------------------------------------------------------------

// UploadModelLegendPictureResponse

// string legend_url = 1;
inline void UploadModelLegendPictureResponse::clear_legend_url() {
  legend_url_.ClearToEmpty();
}
inline const std::string& UploadModelLegendPictureResponse::legend_url() const {
  // @@protoc_insertion_point(field_get:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
  return _internal_legend_url();
}
inline void UploadModelLegendPictureResponse::set_legend_url(const std::string& value) {
  _internal_set_legend_url(value);
  // @@protoc_insertion_point(field_set:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
}
inline std::string* UploadModelLegendPictureResponse::mutable_legend_url() {
  // @@protoc_insertion_point(field_mutable:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
  return _internal_mutable_legend_url();
}
inline const std::string& UploadModelLegendPictureResponse::_internal_legend_url() const {
  return legend_url_.Get();
}
inline void UploadModelLegendPictureResponse::_internal_set_legend_url(const std::string& value) {
  
  legend_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UploadModelLegendPictureResponse::set_legend_url(std::string&& value) {
  
  legend_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
}
inline void UploadModelLegendPictureResponse::set_legend_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  legend_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
}
inline void UploadModelLegendPictureResponse::set_legend_url(const char* value,
    size_t size) {
  
  legend_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
}
inline std::string* UploadModelLegendPictureResponse::_internal_mutable_legend_url() {
  
  return legend_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UploadModelLegendPictureResponse::release_legend_url() {
  // @@protoc_insertion_point(field_release:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
  return legend_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UploadModelLegendPictureResponse::set_allocated_legend_url(std::string* legend_url) {
  if (legend_url != nullptr) {
    
  } else {
    
  }
  legend_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), legend_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:smart3dmap.v1.UploadModelLegendPictureResponse.legend_url)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace smart3dmap

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::smart3dmap::v1::ModelFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::smart3dmap::v1::ModelFormat>() {
  return ::smart3dmap::v1::ModelFormat_descriptor();
}
template <> struct is_proto_enum< ::smart3dmap::v1::ZoneType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::smart3dmap::v1::ZoneType>() {
  return ::smart3dmap::v1::ZoneType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_model_5fexporter_2fmodel_5fexporter_2eproto
